2025-01-03 22:12:38,144 - __main__ - INFO - Program started
2025-01-03 22:12:38,144 - src.data_loader - DEBUG - DataLoader initialized with data_dir: data
2025-01-03 22:12:38,144 - src.openai_client - DEBUG - OpenAIClient initialized with model_name: o1-mini
2025-01-03 22:12:38,144 - src.processor - DEBUG - Processor initialized
2025-01-03 22:12:38,144 - src.visualizer - DEBUG - Visualizer initialized with output_dir: output
2025-01-03 22:12:38,144 - src.processor - INFO - Starting processing of exam '2023_1형'
2025-01-03 22:12:38,145 - src.data_loader - DEBUG - Loaded question ID: Q1 from 1.json
2025-01-03 22:12:38,145 - src.data_loader - DEBUG - Loaded question ID: Q2 from 2.json
2025-01-03 22:12:38,145 - src.data_loader - DEBUG - Loaded question ID: Q3 from 3.json
2025-01-03 22:12:38,145 - src.data_loader - DEBUG - Loaded question ID: Q4 from 4.json
2025-01-03 22:12:38,145 - src.data_loader - DEBUG - Loaded question ID: Q5 from 5.json
2025-01-03 22:12:38,146 - src.data_loader - DEBUG - Loaded question ID: Q6 from 6.json
2025-01-03 22:12:38,146 - src.data_loader - DEBUG - Loaded question ID: Q7 from 7.json
2025-01-03 22:12:38,146 - src.data_loader - DEBUG - Loaded question ID: Q8 from 8.json
2025-01-03 22:12:38,146 - src.data_loader - DEBUG - Loaded question ID: Q9 from 9.json
2025-01-03 22:12:38,146 - src.data_loader - DEBUG - Loaded question ID: Q10 from 10.json
2025-01-03 22:12:38,146 - src.data_loader - INFO - Loaded 10 questions from 2023_1형
2025-01-03 22:12:38,146 - src.processor - INFO - Processing 10 questions for exam '2023_1형'
2025-01-03 22:12:38,157 - src.processor - INFO - Processing question 1/10 (ID: Q1)
2025-01-03 22:12:38,157 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 22:12:38,157 - src.openai_client - DEBUG - Constructed prompt:
Please analyze the following multiple choice question and provide your answer with reasoning.

Question: 재무보고를 위한 개념체계’에서 인식과 제거에 대한 다음 설명 중 옳지 않은 것은?

Options:
1. 1. 인식은 자산, 부채, 자본, 수익 또는 비용과 같은 재무제표 요소
중 하나의 정의를 충족하는 항목을 재무상태표나 재무성과표에
포함하기 위하여 포착하는 과정이다.
2. 2.  거래나 그 밖의 사건에서 발생된 자산이나 부채의 최초 인식에
따라 수익과 관련 비용을 동시에 인식할 수 있다. 수익과 관련
비용의 동시 인식은 때때로 수익과 관련 원가의 대응을 나타낸다
3. 3. 재무제표이용자들에게 자산이나 부채 그리고 이에 따른 결과로
발생하는 수익, 비용 또는 자본변동에 대한 목적적합한 정보와
충실한 표현 중 어느 하나를 제공하는 경우 자산이나 부채를
인식한다.
4. 4. 자산은 일반적으로 기업이 인식한 자산의 전부 또는 일부에 대한
통제를 상실하였을 때 제거하고, 부채는 일반적으로 기업이
인식한 부채의 전부 또는 일부에 대한 현재의무를 더 이상
부담하지 않을 때 제거한다.
5. 5. 제거에 대한 회계 요구사항은 제거를 초래하는 거래나 그 밖의
사건 후의 잔여 자산과 부채, 그리고 그 거래나 그 밖의 사건으로
인한 기업의 자산과 부채의 변동 두 가지를 모두 충실히 표현하는
것을 목표로 한다..

아래의 JSON 형식으로 대답을 제공하세요
{
  "selected_answer": "1",  // The number (1-5) of your chosen option
  "reasoning": [
    "1.1번 보기가 왜 정확한지 또는 틀린지",
    "2. 2번 보기가 왜 정확한지 또는 틀린지",
    "3. 3번 보기가 왜 정확한지 또는 틀린지",
    "4. 4번 보기가 왜 정확한지 또는 틀린지",
    "5. 5번 보기가 왜 정확한지 또는 틀린지"
  ]
}
2025-01-03 22:12:38,169 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 22:12:38,170 - openai - DEBUG - api_version=None data='{"model": "o1-mini", "messages": [{"role": "system", "content": "\\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9"}, {"role": "user", "content": "Please analyze the following multiple choice question and provide your answer with reasoning.\\n\\nQuestion: \\uc7ac\\ubb34\\ubcf4\\uace0\\ub97c \\uc704\\ud55c \\uac1c\\ub150\\uccb4\\uacc4\\u2019\\uc5d0\\uc11c \\uc778\\uc2dd\\uacfc \\uc81c\\uac70\\uc5d0 \\ub300\\ud55c \\ub2e4\\uc74c \\uc124\\uba85 \\uc911 \\uc633\\uc9c0 \\uc54a\\uc740 \\uac83\\uc740?\\n\\nOptions:\\n1. 1. \\uc778\\uc2dd\\uc740 \\uc790\\uc0b0, \\ubd80\\ucc44, \\uc790\\ubcf8, \\uc218\\uc775 \\ub610\\ub294 \\ube44\\uc6a9\\uacfc \\uac19\\uc740 \\uc7ac\\ubb34\\uc81c\\ud45c \\uc694\\uc18c\\n\\uc911 \\ud558\\ub098\\uc758 \\uc815\\uc758\\ub97c \\ucda9\\uc871\\ud558\\ub294 \\ud56d\\ubaa9\\uc744 \\uc7ac\\ubb34\\uc0c1\\ud0dc\\ud45c\\ub098 \\uc7ac\\ubb34\\uc131\\uacfc\\ud45c\\uc5d0\\n\\ud3ec\\ud568\\ud558\\uae30 \\uc704\\ud558\\uc5ec \\ud3ec\\ucc29\\ud558\\ub294 \\uacfc\\uc815\\uc774\\ub2e4.\\n2. 2.  \\uac70\\ub798\\ub098 \\uadf8 \\ubc16\\uc758 \\uc0ac\\uac74\\uc5d0\\uc11c \\ubc1c\\uc0dd\\ub41c \\uc790\\uc0b0\\uc774\\ub098 \\ubd80\\ucc44\\uc758 \\ucd5c\\ucd08 \\uc778\\uc2dd\\uc5d0\\n\\ub530\\ub77c \\uc218\\uc775\\uacfc \\uad00\\ub828 \\ube44\\uc6a9\\uc744 \\ub3d9\\uc2dc\\uc5d0 \\uc778\\uc2dd\\ud560 \\uc218 \\uc788\\ub2e4. \\uc218\\uc775\\uacfc \\uad00\\ub828\\n\\ube44\\uc6a9\\uc758 \\ub3d9\\uc2dc \\uc778\\uc2dd\\uc740 \\ub54c\\ub54c\\ub85c \\uc218\\uc775\\uacfc \\uad00\\ub828 \\uc6d0\\uac00\\uc758 \\ub300\\uc751\\uc744 \\ub098\\ud0c0\\ub0b8\\ub2e4\\n3. 3. \\uc7ac\\ubb34\\uc81c\\ud45c\\uc774\\uc6a9\\uc790\\ub4e4\\uc5d0\\uac8c \\uc790\\uc0b0\\uc774\\ub098 \\ubd80\\ucc44 \\uadf8\\ub9ac\\uace0 \\uc774\\uc5d0 \\ub530\\ub978 \\uacb0\\uacfc\\ub85c\\n\\ubc1c\\uc0dd\\ud558\\ub294 \\uc218\\uc775, \\ube44\\uc6a9 \\ub610\\ub294 \\uc790\\ubcf8\\ubcc0\\ub3d9\\uc5d0 \\ub300\\ud55c \\ubaa9\\uc801\\uc801\\ud569\\ud55c \\uc815\\ubcf4\\uc640\\n\\ucda9\\uc2e4\\ud55c \\ud45c\\ud604 \\uc911 \\uc5b4\\ub290 \\ud558\\ub098\\ub97c \\uc81c\\uacf5\\ud558\\ub294 \\uacbd\\uc6b0 \\uc790\\uc0b0\\uc774\\ub098 \\ubd80\\ucc44\\ub97c\\n\\uc778\\uc2dd\\ud55c\\ub2e4.\\n4. 4. \\uc790\\uc0b0\\uc740 \\uc77c\\ubc18\\uc801\\uc73c\\ub85c \\uae30\\uc5c5\\uc774 \\uc778\\uc2dd\\ud55c \\uc790\\uc0b0\\uc758 \\uc804\\ubd80 \\ub610\\ub294 \\uc77c\\ubd80\\uc5d0 \\ub300\\ud55c\\n\\ud1b5\\uc81c\\ub97c \\uc0c1\\uc2e4\\ud558\\uc600\\uc744 \\ub54c \\uc81c\\uac70\\ud558\\uace0, \\ubd80\\ucc44\\ub294 \\uc77c\\ubc18\\uc801\\uc73c\\ub85c \\uae30\\uc5c5\\uc774\\n\\uc778\\uc2dd\\ud55c \\ubd80\\ucc44\\uc758 \\uc804\\ubd80 \\ub610\\ub294 \\uc77c\\ubd80\\uc5d0 \\ub300\\ud55c \\ud604\\uc7ac\\uc758\\ubb34\\ub97c \\ub354 \\uc774\\uc0c1\\n\\ubd80\\ub2f4\\ud558\\uc9c0 \\uc54a\\uc744 \\ub54c \\uc81c\\uac70\\ud55c\\ub2e4.\\n5. 5. \\uc81c\\uac70\\uc5d0 \\ub300\\ud55c \\ud68c\\uacc4 \\uc694\\uad6c\\uc0ac\\ud56d\\uc740 \\uc81c\\uac70\\ub97c \\ucd08\\ub798\\ud558\\ub294 \\uac70\\ub798\\ub098 \\uadf8 \\ubc16\\uc758\\n\\uc0ac\\uac74 \\ud6c4\\uc758 \\uc794\\uc5ec \\uc790\\uc0b0\\uacfc \\ubd80\\ucc44, \\uadf8\\ub9ac\\uace0 \\uadf8 \\uac70\\ub798\\ub098 \\uadf8 \\ubc16\\uc758 \\uc0ac\\uac74\\uc73c\\ub85c\\n\\uc778\\ud55c \\uae30\\uc5c5\\uc758 \\uc790\\uc0b0\\uacfc \\ubd80\\ucc44\\uc758 \\ubcc0\\ub3d9 \\ub450 \\uac00\\uc9c0\\ub97c \\ubaa8\\ub450 \\ucda9\\uc2e4\\ud788 \\ud45c\\ud604\\ud558\\ub294\\n\\uac83\\uc744 \\ubaa9\\ud45c\\ub85c \\ud55c\\ub2e4..\\n\\n\\uc544\\ub798\\uc758 JSON \\ud615\\uc2dd\\uc73c\\ub85c \\ub300\\ub2f5\\uc744 \\uc81c\\uacf5\\ud558\\uc138\\uc694\\n{\\n  \\"selected_answer\\": \\"1\\",  // The number (1-5) of your chosen option\\n  \\"reasoning\\": [\\n    \\"1.1\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"2. 2\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"3. 3\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"4. 4\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"5. 5\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 22:12:38,170 - urllib3.util.retry - DEBUG - Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2025-01-03 22:12:38,176 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.openai.com:443
2025-01-03 22:12:39,059 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 400 221
2025-01-03 22:12:39,062 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=14 request_id=req_7c9bbe73c976cce1ceda29e77e831cd6 response_code=400
2025-01-03 22:12:39,063 - openai - INFO - error_code=unsupported_value error_message="Unsupported value: 'messages[0].role' does not support 'system' with this model." error_param=messages[0].role error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 22:12:39,063 - src.openai_client - ERROR - Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:39,070 - src.processor - ERROR - Error processing question 'Q1': Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 46, in process_exam
    gpt_response = self.openai_client.get_response(question.question, question.options)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 37, in get_response
    raise ValueError(f"Error during OpenAI API call: {e}")
ValueError: Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:39,072 - src.processor - INFO - Processing question 2/10 (ID: Q2)
2025-01-03 22:12:39,072 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 22:12:39,072 - src.openai_client - DEBUG - Constructed prompt:
Please analyze the following multiple choice question and provide your answer with reasoning.

Question: '일반목적재무보고의 목적'에 대한 다음 설명 중 옳지 않은 것은?

Options:
1. 많은 현재 및 잠재적 투자자, 대여자 및 그 밖의 채권자는 정보를 제공하도록 보고기업에 직접 요구할 수 없고, 그들이 필요로 하는 재무정보의 많은 부분을 일반목적재무보고서에 의존해야만 한다.
2. 회계기준위원회는 회계기준을 제정할 때 최대 다수의 주요이용자 수요를 충족하는 정보를 제공하기 위해 노력할 것이다. 그러나 공통된 정보수요에 초점을 맞춘다고 해서 보고기업으로 하여금 주요이용자의 특정 일부집단에게 가장 유용한 추가 정보를 포함하지 못하게 하는 것은 아니다.
3. 보고기업의 경영진도 해당 기업에 대한 재무정보에 관심이 있다. 그러나 경영진은 필요로 하는 재무정보를 내부에서 구할 수 있기 때문에 일반목적재무보고서에 의존할 필요가 없다.
4. 보고기업의 경제적자원 및 청구권의 성격 및 금액에 대한 정보는 이용자들이 보고기업의 재무적 강점과 약점을 식별하는데 도움을 줄 수 있다.
5. 보고기업의 경제적자원 및 청구권은 재무성과 외의 사유로는 변동될 수 없다.

아래의 JSON 형식으로 대답을 제공하세요
{
  "selected_answer": "1",  // The number (1-5) of your chosen option
  "reasoning": [
    "1.1번 보기가 왜 정확한지 또는 틀린지",
    "2. 2번 보기가 왜 정확한지 또는 틀린지",
    "3. 3번 보기가 왜 정확한지 또는 틀린지",
    "4. 4번 보기가 왜 정확한지 또는 틀린지",
    "5. 5번 보기가 왜 정확한지 또는 틀린지"
  ]
}
2025-01-03 22:12:39,072 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 22:12:39,072 - openai - DEBUG - api_version=None data='{"model": "o1-mini", "messages": [{"role": "system", "content": "\\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9"}, {"role": "user", "content": "Please analyze the following multiple choice question and provide your answer with reasoning.\\n\\nQuestion: \'\\uc77c\\ubc18\\ubaa9\\uc801\\uc7ac\\ubb34\\ubcf4\\uace0\\uc758 \\ubaa9\\uc801\'\\uc5d0 \\ub300\\ud55c \\ub2e4\\uc74c \\uc124\\uba85 \\uc911 \\uc633\\uc9c0 \\uc54a\\uc740 \\uac83\\uc740?\\n\\nOptions:\\n1. \\ub9ce\\uc740 \\ud604\\uc7ac \\ubc0f \\uc7a0\\uc7ac\\uc801 \\ud22c\\uc790\\uc790, \\ub300\\uc5ec\\uc790 \\ubc0f \\uadf8 \\ubc16\\uc758 \\ucc44\\uad8c\\uc790\\ub294 \\uc815\\ubcf4\\ub97c \\uc81c\\uacf5\\ud558\\ub3c4\\ub85d \\ubcf4\\uace0\\uae30\\uc5c5\\uc5d0 \\uc9c1\\uc811 \\uc694\\uad6c\\ud560 \\uc218 \\uc5c6\\uace0, \\uadf8\\ub4e4\\uc774 \\ud544\\uc694\\ub85c \\ud558\\ub294 \\uc7ac\\ubb34\\uc815\\ubcf4\\uc758 \\ub9ce\\uc740 \\ubd80\\ubd84\\uc744 \\uc77c\\ubc18\\ubaa9\\uc801\\uc7ac\\ubb34\\ubcf4\\uace0\\uc11c\\uc5d0 \\uc758\\uc874\\ud574\\uc57c\\ub9cc \\ud55c\\ub2e4.\\n2. \\ud68c\\uacc4\\uae30\\uc900\\uc704\\uc6d0\\ud68c\\ub294 \\ud68c\\uacc4\\uae30\\uc900\\uc744 \\uc81c\\uc815\\ud560 \\ub54c \\ucd5c\\ub300 \\ub2e4\\uc218\\uc758 \\uc8fc\\uc694\\uc774\\uc6a9\\uc790 \\uc218\\uc694\\ub97c \\ucda9\\uc871\\ud558\\ub294 \\uc815\\ubcf4\\ub97c \\uc81c\\uacf5\\ud558\\uae30 \\uc704\\ud574 \\ub178\\ub825\\ud560 \\uac83\\uc774\\ub2e4. \\uadf8\\ub7ec\\ub098 \\uacf5\\ud1b5\\ub41c \\uc815\\ubcf4\\uc218\\uc694\\uc5d0 \\ucd08\\uc810\\uc744 \\ub9de\\ucd98\\ub2e4\\uace0 \\ud574\\uc11c \\ubcf4\\uace0\\uae30\\uc5c5\\uc73c\\ub85c \\ud558\\uc5ec\\uae08 \\uc8fc\\uc694\\uc774\\uc6a9\\uc790\\uc758 \\ud2b9\\uc815 \\uc77c\\ubd80\\uc9d1\\ub2e8\\uc5d0\\uac8c \\uac00\\uc7a5 \\uc720\\uc6a9\\ud55c \\ucd94\\uac00 \\uc815\\ubcf4\\ub97c \\ud3ec\\ud568\\ud558\\uc9c0 \\ubabb\\ud558\\uac8c \\ud558\\ub294 \\uac83\\uc740 \\uc544\\ub2c8\\ub2e4.\\n3. \\ubcf4\\uace0\\uae30\\uc5c5\\uc758 \\uacbd\\uc601\\uc9c4\\ub3c4 \\ud574\\ub2f9 \\uae30\\uc5c5\\uc5d0 \\ub300\\ud55c \\uc7ac\\ubb34\\uc815\\ubcf4\\uc5d0 \\uad00\\uc2ec\\uc774 \\uc788\\ub2e4. \\uadf8\\ub7ec\\ub098 \\uacbd\\uc601\\uc9c4\\uc740 \\ud544\\uc694\\ub85c \\ud558\\ub294 \\uc7ac\\ubb34\\uc815\\ubcf4\\ub97c \\ub0b4\\ubd80\\uc5d0\\uc11c \\uad6c\\ud560 \\uc218 \\uc788\\uae30 \\ub54c\\ubb38\\uc5d0 \\uc77c\\ubc18\\ubaa9\\uc801\\uc7ac\\ubb34\\ubcf4\\uace0\\uc11c\\uc5d0 \\uc758\\uc874\\ud560 \\ud544\\uc694\\uac00 \\uc5c6\\ub2e4.\\n4. \\ubcf4\\uace0\\uae30\\uc5c5\\uc758 \\uacbd\\uc81c\\uc801\\uc790\\uc6d0 \\ubc0f \\uccad\\uad6c\\uad8c\\uc758 \\uc131\\uaca9 \\ubc0f \\uae08\\uc561\\uc5d0 \\ub300\\ud55c \\uc815\\ubcf4\\ub294 \\uc774\\uc6a9\\uc790\\ub4e4\\uc774 \\ubcf4\\uace0\\uae30\\uc5c5\\uc758 \\uc7ac\\ubb34\\uc801 \\uac15\\uc810\\uacfc \\uc57d\\uc810\\uc744 \\uc2dd\\ubcc4\\ud558\\ub294\\ub370 \\ub3c4\\uc6c0\\uc744 \\uc904 \\uc218 \\uc788\\ub2e4.\\n5. \\ubcf4\\uace0\\uae30\\uc5c5\\uc758 \\uacbd\\uc81c\\uc801\\uc790\\uc6d0 \\ubc0f \\uccad\\uad6c\\uad8c\\uc740 \\uc7ac\\ubb34\\uc131\\uacfc \\uc678\\uc758 \\uc0ac\\uc720\\ub85c\\ub294 \\ubcc0\\ub3d9\\ub420 \\uc218 \\uc5c6\\ub2e4.\\n\\n\\uc544\\ub798\\uc758 JSON \\ud615\\uc2dd\\uc73c\\ub85c \\ub300\\ub2f5\\uc744 \\uc81c\\uacf5\\ud558\\uc138\\uc694\\n{\\n  \\"selected_answer\\": \\"1\\",  // The number (1-5) of your chosen option\\n  \\"reasoning\\": [\\n    \\"1.1\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"2. 2\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"3. 3\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"4. 4\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"5. 5\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 22:12:39,452 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 400 221
2025-01-03 22:12:39,453 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=25 request_id=req_dfdbdfd302729b91048f5c115a192f57 response_code=400
2025-01-03 22:12:39,453 - openai - INFO - error_code=unsupported_value error_message="Unsupported value: 'messages[0].role' does not support 'system' with this model." error_param=messages[0].role error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 22:12:39,454 - src.openai_client - ERROR - Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:39,455 - src.processor - ERROR - Error processing question 'Q2': Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 46, in process_exam
    gpt_response = self.openai_client.get_response(question.question, question.options)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 37, in get_response
    raise ValueError(f"Error during OpenAI API call: {e}")
ValueError: Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:39,457 - src.processor - INFO - Processing question 3/10 (ID: Q3)
2025-01-03 22:12:39,457 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 22:12:39,457 - src.openai_client - DEBUG - Constructed prompt:
Please analyze the following multiple choice question and provide your answer with reasoning.

Question: 유통업을 영위하고 있는 ㈜대한은 재고자산에 대해 계속기록법과 가중평균법을 적용하고 있으며, 기말에는 실지재고조사를 실시하고 있다. · ㈜대한이 6월 1일에 계약한 상품 200개는 6월 30일에창고로입고되었다.
· ㈜대한이 9월 1일에 계약한 상품 200개는 11월1일에선적되었으나 12월 말 현재까지 운송중인 상태로 확인되었다.· 12월 말 현재 ㈜대한이 창고에 보관중인 상품의 총 수량은300개이고 실사를 통해 다음과 같은 사실을 발견하였다. ㈜대한은 12월 1일에 ㈜민국으로부터 상품 200개(단위원가￦300)에 대해 판매를 수탁받아 창고에 보관하였으며,이 중 20%를 12월 중에 판매하였다.· ㈜대한은 12월 1일에 ㈜만세와 위탁판매계약을 체결하고상품 50개(단위원가 ￦240)를 적송하였다. 기말 실사후㈜만세가 12월 말 현재 보관중인 상품은 20개임을 확인하였다.· ㈜대한은 재고자산감모손실과 재고자산평가손실(환입)을매출원가에서 조정하고 있다.· 수탁품과 적송품에서는 감모(분실, 도난 등)가 발생하지 않았다.20x1년 기말재고자산의 단위당 순실현가능가치가 ￦200이고,재고자산평가충당금의 기초잔액이 ￦3,000일 때, ㈜대한의 20x1년도매출원가는 얼마인가?

Options:
1. ￦72,000
2. ￦74,400
3. ￦81,800
4. ￦85,000
5. ￦88,000

아래의 JSON 형식으로 대답을 제공하세요
{
  "selected_answer": "1",  // The number (1-5) of your chosen option
  "reasoning": [
    "1.1번 보기가 왜 정확한지 또는 틀린지",
    "2. 2번 보기가 왜 정확한지 또는 틀린지",
    "3. 3번 보기가 왜 정확한지 또는 틀린지",
    "4. 4번 보기가 왜 정확한지 또는 틀린지",
    "5. 5번 보기가 왜 정확한지 또는 틀린지"
  ]
}
2025-01-03 22:12:39,457 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 22:12:39,457 - openai - DEBUG - api_version=None data='{"model": "o1-mini", "messages": [{"role": "system", "content": "\\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9"}, {"role": "user", "content": "Please analyze the following multiple choice question and provide your answer with reasoning.\\n\\nQuestion: \\uc720\\ud1b5\\uc5c5\\uc744 \\uc601\\uc704\\ud558\\uace0 \\uc788\\ub294 \\u321c\\ub300\\ud55c\\uc740 \\uc7ac\\uace0\\uc790\\uc0b0\\uc5d0 \\ub300\\ud574 \\uacc4\\uc18d\\uae30\\ub85d\\ubc95\\uacfc \\uac00\\uc911\\ud3c9\\uade0\\ubc95\\uc744 \\uc801\\uc6a9\\ud558\\uace0 \\uc788\\uc73c\\uba70, \\uae30\\ub9d0\\uc5d0\\ub294 \\uc2e4\\uc9c0\\uc7ac\\uace0\\uc870\\uc0ac\\ub97c \\uc2e4\\uc2dc\\ud558\\uace0 \\uc788\\ub2e4. \\u00b7 \\u321c\\ub300\\ud55c\\uc774 6\\uc6d4 1\\uc77c\\uc5d0 \\uacc4\\uc57d\\ud55c \\uc0c1\\ud488 200\\uac1c\\ub294 6\\uc6d4 30\\uc77c\\uc5d0\\ucc3d\\uace0\\ub85c\\uc785\\uace0\\ub418\\uc5c8\\ub2e4.\\n\\u00b7 \\u321c\\ub300\\ud55c\\uc774 9\\uc6d4 1\\uc77c\\uc5d0 \\uacc4\\uc57d\\ud55c \\uc0c1\\ud488 200\\uac1c\\ub294 11\\uc6d41\\uc77c\\uc5d0\\uc120\\uc801\\ub418\\uc5c8\\uc73c\\ub098 12\\uc6d4 \\ub9d0 \\ud604\\uc7ac\\uae4c\\uc9c0 \\uc6b4\\uc1a1\\uc911\\uc778 \\uc0c1\\ud0dc\\ub85c \\ud655\\uc778\\ub418\\uc5c8\\ub2e4.\\u00b7 12\\uc6d4 \\ub9d0 \\ud604\\uc7ac \\u321c\\ub300\\ud55c\\uc774 \\ucc3d\\uace0\\uc5d0 \\ubcf4\\uad00\\uc911\\uc778 \\uc0c1\\ud488\\uc758 \\ucd1d \\uc218\\ub7c9\\uc740300\\uac1c\\uc774\\uace0 \\uc2e4\\uc0ac\\ub97c \\ud1b5\\ud574 \\ub2e4\\uc74c\\uacfc \\uac19\\uc740 \\uc0ac\\uc2e4\\uc744 \\ubc1c\\uacac\\ud558\\uc600\\ub2e4. \\u321c\\ub300\\ud55c\\uc740 12\\uc6d4 1\\uc77c\\uc5d0 \\u321c\\ubbfc\\uad6d\\uc73c\\ub85c\\ubd80\\ud130 \\uc0c1\\ud488 200\\uac1c(\\ub2e8\\uc704\\uc6d0\\uac00\\uffe6300)\\uc5d0 \\ub300\\ud574 \\ud310\\ub9e4\\ub97c \\uc218\\ud0c1\\ubc1b\\uc544 \\ucc3d\\uace0\\uc5d0 \\ubcf4\\uad00\\ud558\\uc600\\uc73c\\uba70,\\uc774 \\uc911 20%\\ub97c 12\\uc6d4 \\uc911\\uc5d0 \\ud310\\ub9e4\\ud558\\uc600\\ub2e4.\\u00b7 \\u321c\\ub300\\ud55c\\uc740 12\\uc6d4 1\\uc77c\\uc5d0 \\u321c\\ub9cc\\uc138\\uc640 \\uc704\\ud0c1\\ud310\\ub9e4\\uacc4\\uc57d\\uc744 \\uccb4\\uacb0\\ud558\\uace0\\uc0c1\\ud488 50\\uac1c(\\ub2e8\\uc704\\uc6d0\\uac00 \\uffe6240)\\ub97c \\uc801\\uc1a1\\ud558\\uc600\\ub2e4. \\uae30\\ub9d0 \\uc2e4\\uc0ac\\ud6c4\\u321c\\ub9cc\\uc138\\uac00 12\\uc6d4 \\ub9d0 \\ud604\\uc7ac \\ubcf4\\uad00\\uc911\\uc778 \\uc0c1\\ud488\\uc740 20\\uac1c\\uc784\\uc744 \\ud655\\uc778\\ud558\\uc600\\ub2e4.\\u00b7 \\u321c\\ub300\\ud55c\\uc740 \\uc7ac\\uace0\\uc790\\uc0b0\\uac10\\ubaa8\\uc190\\uc2e4\\uacfc \\uc7ac\\uace0\\uc790\\uc0b0\\ud3c9\\uac00\\uc190\\uc2e4(\\ud658\\uc785)\\uc744\\ub9e4\\ucd9c\\uc6d0\\uac00\\uc5d0\\uc11c \\uc870\\uc815\\ud558\\uace0 \\uc788\\ub2e4.\\u00b7 \\uc218\\ud0c1\\ud488\\uacfc \\uc801\\uc1a1\\ud488\\uc5d0\\uc11c\\ub294 \\uac10\\ubaa8(\\ubd84\\uc2e4, \\ub3c4\\ub09c \\ub4f1)\\uac00 \\ubc1c\\uc0dd\\ud558\\uc9c0 \\uc54a\\uc558\\ub2e4.20x1\\ub144 \\uae30\\ub9d0\\uc7ac\\uace0\\uc790\\uc0b0\\uc758 \\ub2e8\\uc704\\ub2f9 \\uc21c\\uc2e4\\ud604\\uac00\\ub2a5\\uac00\\uce58\\uac00 \\uffe6200\\uc774\\uace0,\\uc7ac\\uace0\\uc790\\uc0b0\\ud3c9\\uac00\\ucda9\\ub2f9\\uae08\\uc758 \\uae30\\ucd08\\uc794\\uc561\\uc774 \\uffe63,000\\uc77c \\ub54c, \\u321c\\ub300\\ud55c\\uc758 20x1\\ub144\\ub3c4\\ub9e4\\ucd9c\\uc6d0\\uac00\\ub294 \\uc5bc\\ub9c8\\uc778\\uac00?\\n\\nOptions:\\n1. \\uffe672,000\\n2. \\uffe674,400\\n3. \\uffe681,800\\n4. \\uffe685,000\\n5. \\uffe688,000\\n\\n\\uc544\\ub798\\uc758 JSON \\ud615\\uc2dd\\uc73c\\ub85c \\ub300\\ub2f5\\uc744 \\uc81c\\uacf5\\ud558\\uc138\\uc694\\n{\\n  \\"selected_answer\\": \\"1\\",  // The number (1-5) of your chosen option\\n  \\"reasoning\\": [\\n    \\"1.1\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"2. 2\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"3. 3\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"4. 4\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"5. 5\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 22:12:39,874 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 400 221
2025-01-03 22:12:39,876 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=19 request_id=req_ea38982a6d07dc7e23979f7f88503d2a response_code=400
2025-01-03 22:12:39,876 - openai - INFO - error_code=unsupported_value error_message="Unsupported value: 'messages[0].role' does not support 'system' with this model." error_param=messages[0].role error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 22:12:39,876 - src.openai_client - ERROR - Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:39,878 - src.processor - ERROR - Error processing question 'Q3': Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 46, in process_exam
    gpt_response = self.openai_client.get_response(question.question, question.options)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 37, in get_response
    raise ValueError(f"Error during OpenAI API call: {e}")
ValueError: Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:39,883 - src.processor - INFO - Processing question 4/10 (ID: Q4)
2025-01-03 22:12:39,883 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 22:12:39,883 - src.openai_client - DEBUG - Constructed prompt:
Please analyze the following multiple choice question and provide your answer with reasoning.

Question: 기업회계기준서 제1002호 '재고자산'에 대한 다음 설명 중 옳지 않은 것은?

Options:
1. 공정가치에서 처분부대원가를 뺀 금액으로 측정한 일반상품 중개기업의 재고자산에 대해서는 저가법을 적용하지 않는다.
2. 순실현가능가치는 재고자산의 주된 (또는 가장 유리한) 시장에서 시장참여자 사이에 일어날 수 있는 정상거래의 가격에서 처분 부대원가를 뺀 금액으로 측정하기 때문에 기업특유의 가치가 아니다.
3. 생물자산에서 수확한 농림어업 수확물로 구성된 재고자산은 공정가치에서 처분부대원가를 뺀 금액으로 측정하여 수확 시점에 최초로 인식한다.
4. 재고자산의 감액을 초래했던 상황이 해소되거나 경제상황의 변동으로 순실현가능가치가 상승한 명백한 증거가 있는 경우에는 최초의 장부금액을 초과하지 않는 범위 내에서 평가손실을 환입한다.
5. 성격과 용도 면에서 유사한 재고자산에는 동일한 단위원가 결정 방법을 적용하여야 하며, 성격이나 용도 면에서 차이가 있는 재고자산에는 서로 다른 단위원가 결정방법을 적용할 수 있다.

아래의 JSON 형식으로 대답을 제공하세요
{
  "selected_answer": "1",  // The number (1-5) of your chosen option
  "reasoning": [
    "1.1번 보기가 왜 정확한지 또는 틀린지",
    "2. 2번 보기가 왜 정확한지 또는 틀린지",
    "3. 3번 보기가 왜 정확한지 또는 틀린지",
    "4. 4번 보기가 왜 정확한지 또는 틀린지",
    "5. 5번 보기가 왜 정확한지 또는 틀린지"
  ]
}
2025-01-03 22:12:39,883 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 22:12:39,883 - openai - DEBUG - api_version=None data='{"model": "o1-mini", "messages": [{"role": "system", "content": "\\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9"}, {"role": "user", "content": "Please analyze the following multiple choice question and provide your answer with reasoning.\\n\\nQuestion: \\uae30\\uc5c5\\ud68c\\uacc4\\uae30\\uc900\\uc11c \\uc81c1002\\ud638 \'\\uc7ac\\uace0\\uc790\\uc0b0\'\\uc5d0 \\ub300\\ud55c \\ub2e4\\uc74c \\uc124\\uba85 \\uc911 \\uc633\\uc9c0 \\uc54a\\uc740 \\uac83\\uc740?\\n\\nOptions:\\n1. \\uacf5\\uc815\\uac00\\uce58\\uc5d0\\uc11c \\ucc98\\ubd84\\ubd80\\ub300\\uc6d0\\uac00\\ub97c \\ube80 \\uae08\\uc561\\uc73c\\ub85c \\uce21\\uc815\\ud55c \\uc77c\\ubc18\\uc0c1\\ud488 \\uc911\\uac1c\\uae30\\uc5c5\\uc758 \\uc7ac\\uace0\\uc790\\uc0b0\\uc5d0 \\ub300\\ud574\\uc11c\\ub294 \\uc800\\uac00\\ubc95\\uc744 \\uc801\\uc6a9\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4.\\n2. \\uc21c\\uc2e4\\ud604\\uac00\\ub2a5\\uac00\\uce58\\ub294 \\uc7ac\\uace0\\uc790\\uc0b0\\uc758 \\uc8fc\\ub41c (\\ub610\\ub294 \\uac00\\uc7a5 \\uc720\\ub9ac\\ud55c) \\uc2dc\\uc7a5\\uc5d0\\uc11c \\uc2dc\\uc7a5\\ucc38\\uc5ec\\uc790 \\uc0ac\\uc774\\uc5d0 \\uc77c\\uc5b4\\ub0a0 \\uc218 \\uc788\\ub294 \\uc815\\uc0c1\\uac70\\ub798\\uc758 \\uac00\\uaca9\\uc5d0\\uc11c \\ucc98\\ubd84 \\ubd80\\ub300\\uc6d0\\uac00\\ub97c \\ube80 \\uae08\\uc561\\uc73c\\ub85c \\uce21\\uc815\\ud558\\uae30 \\ub54c\\ubb38\\uc5d0 \\uae30\\uc5c5\\ud2b9\\uc720\\uc758 \\uac00\\uce58\\uac00 \\uc544\\ub2c8\\ub2e4.\\n3. \\uc0dd\\ubb3c\\uc790\\uc0b0\\uc5d0\\uc11c \\uc218\\ud655\\ud55c \\ub18d\\ub9bc\\uc5b4\\uc5c5 \\uc218\\ud655\\ubb3c\\ub85c \\uad6c\\uc131\\ub41c \\uc7ac\\uace0\\uc790\\uc0b0\\uc740 \\uacf5\\uc815\\uac00\\uce58\\uc5d0\\uc11c \\ucc98\\ubd84\\ubd80\\ub300\\uc6d0\\uac00\\ub97c \\ube80 \\uae08\\uc561\\uc73c\\ub85c \\uce21\\uc815\\ud558\\uc5ec \\uc218\\ud655 \\uc2dc\\uc810\\uc5d0 \\ucd5c\\ucd08\\ub85c \\uc778\\uc2dd\\ud55c\\ub2e4.\\n4. \\uc7ac\\uace0\\uc790\\uc0b0\\uc758 \\uac10\\uc561\\uc744 \\ucd08\\ub798\\ud588\\ub358 \\uc0c1\\ud669\\uc774 \\ud574\\uc18c\\ub418\\uac70\\ub098 \\uacbd\\uc81c\\uc0c1\\ud669\\uc758 \\ubcc0\\ub3d9\\uc73c\\ub85c \\uc21c\\uc2e4\\ud604\\uac00\\ub2a5\\uac00\\uce58\\uac00 \\uc0c1\\uc2b9\\ud55c \\uba85\\ubc31\\ud55c \\uc99d\\uac70\\uac00 \\uc788\\ub294 \\uacbd\\uc6b0\\uc5d0\\ub294 \\ucd5c\\ucd08\\uc758 \\uc7a5\\ubd80\\uae08\\uc561\\uc744 \\ucd08\\uacfc\\ud558\\uc9c0 \\uc54a\\ub294 \\ubc94\\uc704 \\ub0b4\\uc5d0\\uc11c \\ud3c9\\uac00\\uc190\\uc2e4\\uc744 \\ud658\\uc785\\ud55c\\ub2e4.\\n5. \\uc131\\uaca9\\uacfc \\uc6a9\\ub3c4 \\uba74\\uc5d0\\uc11c \\uc720\\uc0ac\\ud55c \\uc7ac\\uace0\\uc790\\uc0b0\\uc5d0\\ub294 \\ub3d9\\uc77c\\ud55c \\ub2e8\\uc704\\uc6d0\\uac00 \\uacb0\\uc815 \\ubc29\\ubc95\\uc744 \\uc801\\uc6a9\\ud558\\uc5ec\\uc57c \\ud558\\uba70, \\uc131\\uaca9\\uc774\\ub098 \\uc6a9\\ub3c4 \\uba74\\uc5d0\\uc11c \\ucc28\\uc774\\uac00 \\uc788\\ub294 \\uc7ac\\uace0\\uc790\\uc0b0\\uc5d0\\ub294 \\uc11c\\ub85c \\ub2e4\\ub978 \\ub2e8\\uc704\\uc6d0\\uac00 \\uacb0\\uc815\\ubc29\\ubc95\\uc744 \\uc801\\uc6a9\\ud560 \\uc218 \\uc788\\ub2e4.\\n\\n\\uc544\\ub798\\uc758 JSON \\ud615\\uc2dd\\uc73c\\ub85c \\ub300\\ub2f5\\uc744 \\uc81c\\uacf5\\ud558\\uc138\\uc694\\n{\\n  \\"selected_answer\\": \\"1\\",  // The number (1-5) of your chosen option\\n  \\"reasoning\\": [\\n    \\"1.1\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"2. 2\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"3. 3\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"4. 4\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"5. 5\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 22:12:40,283 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 400 221
2025-01-03 22:12:40,285 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=13 request_id=req_92e6c61a19bb6b6b188cca2f4a285581 response_code=400
2025-01-03 22:12:40,286 - openai - INFO - error_code=unsupported_value error_message="Unsupported value: 'messages[0].role' does not support 'system' with this model." error_param=messages[0].role error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 22:12:40,286 - src.openai_client - ERROR - Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:40,287 - src.processor - ERROR - Error processing question 'Q4': Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 46, in process_exam
    gpt_response = self.openai_client.get_response(question.question, question.options)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 37, in get_response
    raise ValueError(f"Error during OpenAI API call: {e}")
ValueError: Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:40,289 - src.processor - INFO - Processing question 5/10 (ID: Q5)
2025-01-03 22:12:40,289 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 22:12:40,290 - src.openai_client - DEBUG - Constructed prompt:
Please analyze the following multiple choice question and provide your answer with reasoning.

Question: ㈜대한은 20x1년 1월 1일에 기계장치를 취득하여 감가상각하고 있다. 관련 내용이 주어질 때, ㈜대한의 기계장치에 대한 회계처리가 20x1년도와 20x2년도 당기순이익에 미치는 영향은 각각 얼마인가?

Options:
1. ￦480,000 감소, ￦0 (영향 없음)
2. ￦480,000 감소, ￦30,000 감소
3. ￦480,000 감소, ￦200,000 감소
4. ￦280,000 감소, ￦30,000 감소
5. ￦280,000 감소, ￦200,000 감소

아래의 JSON 형식으로 대답을 제공하세요
{
  "selected_answer": "1",  // The number (1-5) of your chosen option
  "reasoning": [
    "1.1번 보기가 왜 정확한지 또는 틀린지",
    "2. 2번 보기가 왜 정확한지 또는 틀린지",
    "3. 3번 보기가 왜 정확한지 또는 틀린지",
    "4. 4번 보기가 왜 정확한지 또는 틀린지",
    "5. 5번 보기가 왜 정확한지 또는 틀린지"
  ]
}
2025-01-03 22:12:40,290 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 22:12:40,290 - openai - DEBUG - api_version=None data='{"model": "o1-mini", "messages": [{"role": "system", "content": "\\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9"}, {"role": "user", "content": "Please analyze the following multiple choice question and provide your answer with reasoning.\\n\\nQuestion: \\u321c\\ub300\\ud55c\\uc740 20x1\\ub144 1\\uc6d4 1\\uc77c\\uc5d0 \\uae30\\uacc4\\uc7a5\\uce58\\ub97c \\ucde8\\ub4dd\\ud558\\uc5ec \\uac10\\uac00\\uc0c1\\uac01\\ud558\\uace0 \\uc788\\ub2e4. \\uad00\\ub828 \\ub0b4\\uc6a9\\uc774 \\uc8fc\\uc5b4\\uc9c8 \\ub54c, \\u321c\\ub300\\ud55c\\uc758 \\uae30\\uacc4\\uc7a5\\uce58\\uc5d0 \\ub300\\ud55c \\ud68c\\uacc4\\ucc98\\ub9ac\\uac00 20x1\\ub144\\ub3c4\\uc640 20x2\\ub144\\ub3c4 \\ub2f9\\uae30\\uc21c\\uc774\\uc775\\uc5d0 \\ubbf8\\uce58\\ub294 \\uc601\\ud5a5\\uc740 \\uac01\\uac01 \\uc5bc\\ub9c8\\uc778\\uac00?\\n\\nOptions:\\n1. \\uffe6480,000 \\uac10\\uc18c, \\uffe60 (\\uc601\\ud5a5 \\uc5c6\\uc74c)\\n2. \\uffe6480,000 \\uac10\\uc18c, \\uffe630,000 \\uac10\\uc18c\\n3. \\uffe6480,000 \\uac10\\uc18c, \\uffe6200,000 \\uac10\\uc18c\\n4. \\uffe6280,000 \\uac10\\uc18c, \\uffe630,000 \\uac10\\uc18c\\n5. \\uffe6280,000 \\uac10\\uc18c, \\uffe6200,000 \\uac10\\uc18c\\n\\n\\uc544\\ub798\\uc758 JSON \\ud615\\uc2dd\\uc73c\\ub85c \\ub300\\ub2f5\\uc744 \\uc81c\\uacf5\\ud558\\uc138\\uc694\\n{\\n  \\"selected_answer\\": \\"1\\",  // The number (1-5) of your chosen option\\n  \\"reasoning\\": [\\n    \\"1.1\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"2. 2\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"3. 3\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"4. 4\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"5. 5\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 22:12:40,693 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 400 221
2025-01-03 22:12:40,694 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=17 request_id=req_cb3e8047753d2c35ced68fe03d9ea83f response_code=400
2025-01-03 22:12:40,695 - openai - INFO - error_code=unsupported_value error_message="Unsupported value: 'messages[0].role' does not support 'system' with this model." error_param=messages[0].role error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 22:12:40,695 - src.openai_client - ERROR - Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:40,696 - src.processor - ERROR - Error processing question 'Q5': Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 46, in process_exam
    gpt_response = self.openai_client.get_response(question.question, question.options)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 37, in get_response
    raise ValueError(f"Error during OpenAI API call: {e}")
ValueError: Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:40,699 - src.processor - INFO - Processing question 6/10 (ID: Q6)
2025-01-03 22:12:40,699 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 22:12:40,699 - src.openai_client - DEBUG - Constructed prompt:
Please analyze the following multiple choice question and provide your answer with reasoning.

Question: ㈜대한은 20x1년 1월 1일에 기계장치를 취득하여 원가모형을 적용하고 있다. 관련 정보가 주어질 때, ㈜대한의 기계장치에 대한 회계처리가 20x3년도 당기순이익에 미치는 영향은 얼마인가?

Options:
1. ￦20,000 감소
2. ￦10,000 감소
3. ￦0 (영향 없음)
4. ￦10,000 증가
5. ￦20,000 증가

아래의 JSON 형식으로 대답을 제공하세요
{
  "selected_answer": "1",  // The number (1-5) of your chosen option
  "reasoning": [
    "1.1번 보기가 왜 정확한지 또는 틀린지",
    "2. 2번 보기가 왜 정확한지 또는 틀린지",
    "3. 3번 보기가 왜 정확한지 또는 틀린지",
    "4. 4번 보기가 왜 정확한지 또는 틀린지",
    "5. 5번 보기가 왜 정확한지 또는 틀린지"
  ]
}
2025-01-03 22:12:40,699 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 22:12:40,699 - openai - DEBUG - api_version=None data='{"model": "o1-mini", "messages": [{"role": "system", "content": "\\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9"}, {"role": "user", "content": "Please analyze the following multiple choice question and provide your answer with reasoning.\\n\\nQuestion: \\u321c\\ub300\\ud55c\\uc740 20x1\\ub144 1\\uc6d4 1\\uc77c\\uc5d0 \\uae30\\uacc4\\uc7a5\\uce58\\ub97c \\ucde8\\ub4dd\\ud558\\uc5ec \\uc6d0\\uac00\\ubaa8\\ud615\\uc744 \\uc801\\uc6a9\\ud558\\uace0 \\uc788\\ub2e4. \\uad00\\ub828 \\uc815\\ubcf4\\uac00 \\uc8fc\\uc5b4\\uc9c8 \\ub54c, \\u321c\\ub300\\ud55c\\uc758 \\uae30\\uacc4\\uc7a5\\uce58\\uc5d0 \\ub300\\ud55c \\ud68c\\uacc4\\ucc98\\ub9ac\\uac00 20x3\\ub144\\ub3c4 \\ub2f9\\uae30\\uc21c\\uc774\\uc775\\uc5d0 \\ubbf8\\uce58\\ub294 \\uc601\\ud5a5\\uc740 \\uc5bc\\ub9c8\\uc778\\uac00?\\n\\nOptions:\\n1. \\uffe620,000 \\uac10\\uc18c\\n2. \\uffe610,000 \\uac10\\uc18c\\n3. \\uffe60 (\\uc601\\ud5a5 \\uc5c6\\uc74c)\\n4. \\uffe610,000 \\uc99d\\uac00\\n5. \\uffe620,000 \\uc99d\\uac00\\n\\n\\uc544\\ub798\\uc758 JSON \\ud615\\uc2dd\\uc73c\\ub85c \\ub300\\ub2f5\\uc744 \\uc81c\\uacf5\\ud558\\uc138\\uc694\\n{\\n  \\"selected_answer\\": \\"1\\",  // The number (1-5) of your chosen option\\n  \\"reasoning\\": [\\n    \\"1.1\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"2. 2\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"3. 3\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"4. 4\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"5. 5\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 22:12:41,307 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 400 221
2025-01-03 22:12:41,309 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=9 request_id=req_4faea18e1a61d2a6269e255ac44e385f response_code=400
2025-01-03 22:12:41,310 - openai - INFO - error_code=unsupported_value error_message="Unsupported value: 'messages[0].role' does not support 'system' with this model." error_param=messages[0].role error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 22:12:41,310 - src.openai_client - ERROR - Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:41,312 - src.processor - ERROR - Error processing question 'Q6': Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 46, in process_exam
    gpt_response = self.openai_client.get_response(question.question, question.options)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 37, in get_response
    raise ValueError(f"Error during OpenAI API call: {e}")
ValueError: Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:41,314 - src.processor - INFO - Processing question 7/10 (ID: Q7)
2025-01-03 22:12:41,314 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 22:12:41,314 - src.openai_client - DEBUG - Constructed prompt:
Please analyze the following multiple choice question and provide your answer with reasoning.

Question: 무형자산의 인식과 측정에 대한 다음 설명 중 옳지 않은 것은?

Options:
1. 개별 취득하는 무형자산과 사업결합으로 취득하는 무형자산은 무형자산 인식조건 중 자산에서 발생하는 미래경제적효익이 기업에 유입될 가능성이 높다는 조건을 항상 충족하는 것은 아니다.
2. 무형자산을 최초로 인식할 때에는 원가로 측정하며, 사업결합으로 취득하는 무형자산의 원가는 취득일 공정가치로 한다.
3. 사업결합으로 취득하는 자산이 분리가능하거나 계약상 또는 기타 법적 권리에서 발생한다면, 그 자산의 공정가치를 신뢰성 있게 측정하기에 충분한 정보가 존재한다.
4. 내부적으로 창출한 영업권과 내부 프로젝트의 연구단계에서 발생한 지출은 자산으로 인식하지 않는다.
5. 내부적으로 창출한 무형자산의 원가는 그 자산의 창출, 제조 및 경영자가 의도하는 방식으로 운영될 수 있게 준비하는데 필요한 직접 관련된 모든 원가를 포함한다.

아래의 JSON 형식으로 대답을 제공하세요
{
  "selected_answer": "1",  // The number (1-5) of your chosen option
  "reasoning": [
    "1.1번 보기가 왜 정확한지 또는 틀린지",
    "2. 2번 보기가 왜 정확한지 또는 틀린지",
    "3. 3번 보기가 왜 정확한지 또는 틀린지",
    "4. 4번 보기가 왜 정확한지 또는 틀린지",
    "5. 5번 보기가 왜 정확한지 또는 틀린지"
  ]
}
2025-01-03 22:12:41,314 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 22:12:41,314 - openai - DEBUG - api_version=None data='{"model": "o1-mini", "messages": [{"role": "system", "content": "\\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9"}, {"role": "user", "content": "Please analyze the following multiple choice question and provide your answer with reasoning.\\n\\nQuestion: \\ubb34\\ud615\\uc790\\uc0b0\\uc758 \\uc778\\uc2dd\\uacfc \\uce21\\uc815\\uc5d0 \\ub300\\ud55c \\ub2e4\\uc74c \\uc124\\uba85 \\uc911 \\uc633\\uc9c0 \\uc54a\\uc740 \\uac83\\uc740?\\n\\nOptions:\\n1. \\uac1c\\ubcc4 \\ucde8\\ub4dd\\ud558\\ub294 \\ubb34\\ud615\\uc790\\uc0b0\\uacfc \\uc0ac\\uc5c5\\uacb0\\ud569\\uc73c\\ub85c \\ucde8\\ub4dd\\ud558\\ub294 \\ubb34\\ud615\\uc790\\uc0b0\\uc740 \\ubb34\\ud615\\uc790\\uc0b0 \\uc778\\uc2dd\\uc870\\uac74 \\uc911 \\uc790\\uc0b0\\uc5d0\\uc11c \\ubc1c\\uc0dd\\ud558\\ub294 \\ubbf8\\ub798\\uacbd\\uc81c\\uc801\\ud6a8\\uc775\\uc774 \\uae30\\uc5c5\\uc5d0 \\uc720\\uc785\\ub420 \\uac00\\ub2a5\\uc131\\uc774 \\ub192\\ub2e4\\ub294 \\uc870\\uac74\\uc744 \\ud56d\\uc0c1 \\ucda9\\uc871\\ud558\\ub294 \\uac83\\uc740 \\uc544\\ub2c8\\ub2e4.\\n2. \\ubb34\\ud615\\uc790\\uc0b0\\uc744 \\ucd5c\\ucd08\\ub85c \\uc778\\uc2dd\\ud560 \\ub54c\\uc5d0\\ub294 \\uc6d0\\uac00\\ub85c \\uce21\\uc815\\ud558\\uba70, \\uc0ac\\uc5c5\\uacb0\\ud569\\uc73c\\ub85c \\ucde8\\ub4dd\\ud558\\ub294 \\ubb34\\ud615\\uc790\\uc0b0\\uc758 \\uc6d0\\uac00\\ub294 \\ucde8\\ub4dd\\uc77c \\uacf5\\uc815\\uac00\\uce58\\ub85c \\ud55c\\ub2e4.\\n3. \\uc0ac\\uc5c5\\uacb0\\ud569\\uc73c\\ub85c \\ucde8\\ub4dd\\ud558\\ub294 \\uc790\\uc0b0\\uc774 \\ubd84\\ub9ac\\uac00\\ub2a5\\ud558\\uac70\\ub098 \\uacc4\\uc57d\\uc0c1 \\ub610\\ub294 \\uae30\\ud0c0 \\ubc95\\uc801 \\uad8c\\ub9ac\\uc5d0\\uc11c \\ubc1c\\uc0dd\\ud55c\\ub2e4\\uba74, \\uadf8 \\uc790\\uc0b0\\uc758 \\uacf5\\uc815\\uac00\\uce58\\ub97c \\uc2e0\\ub8b0\\uc131 \\uc788\\uac8c \\uce21\\uc815\\ud558\\uae30\\uc5d0 \\ucda9\\ubd84\\ud55c \\uc815\\ubcf4\\uac00 \\uc874\\uc7ac\\ud55c\\ub2e4.\\n4. \\ub0b4\\ubd80\\uc801\\uc73c\\ub85c \\ucc3d\\ucd9c\\ud55c \\uc601\\uc5c5\\uad8c\\uacfc \\ub0b4\\ubd80 \\ud504\\ub85c\\uc81d\\ud2b8\\uc758 \\uc5f0\\uad6c\\ub2e8\\uacc4\\uc5d0\\uc11c \\ubc1c\\uc0dd\\ud55c \\uc9c0\\ucd9c\\uc740 \\uc790\\uc0b0\\uc73c\\ub85c \\uc778\\uc2dd\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4.\\n5. \\ub0b4\\ubd80\\uc801\\uc73c\\ub85c \\ucc3d\\ucd9c\\ud55c \\ubb34\\ud615\\uc790\\uc0b0\\uc758 \\uc6d0\\uac00\\ub294 \\uadf8 \\uc790\\uc0b0\\uc758 \\ucc3d\\ucd9c, \\uc81c\\uc870 \\ubc0f \\uacbd\\uc601\\uc790\\uac00 \\uc758\\ub3c4\\ud558\\ub294 \\ubc29\\uc2dd\\uc73c\\ub85c \\uc6b4\\uc601\\ub420 \\uc218 \\uc788\\uac8c \\uc900\\ube44\\ud558\\ub294\\ub370 \\ud544\\uc694\\ud55c \\uc9c1\\uc811 \\uad00\\ub828\\ub41c \\ubaa8\\ub4e0 \\uc6d0\\uac00\\ub97c \\ud3ec\\ud568\\ud55c\\ub2e4.\\n\\n\\uc544\\ub798\\uc758 JSON \\ud615\\uc2dd\\uc73c\\ub85c \\ub300\\ub2f5\\uc744 \\uc81c\\uacf5\\ud558\\uc138\\uc694\\n{\\n  \\"selected_answer\\": \\"1\\",  // The number (1-5) of your chosen option\\n  \\"reasoning\\": [\\n    \\"1.1\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"2. 2\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"3. 3\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"4. 4\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"5. 5\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 22:12:41,684 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 400 221
2025-01-03 22:12:41,689 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=14 request_id=req_1e668aa3093039d999927c413a8cff1c response_code=400
2025-01-03 22:12:41,690 - openai - INFO - error_code=unsupported_value error_message="Unsupported value: 'messages[0].role' does not support 'system' with this model." error_param=messages[0].role error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 22:12:41,690 - src.openai_client - ERROR - Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:41,692 - src.processor - ERROR - Error processing question 'Q7': Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 46, in process_exam
    gpt_response = self.openai_client.get_response(question.question, question.options)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 37, in get_response
    raise ValueError(f"Error during OpenAI API call: {e}")
ValueError: Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:41,695 - src.processor - INFO - Processing question 8/10 (ID: Q8)
2025-01-03 22:12:41,695 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 22:12:41,695 - src.openai_client - DEBUG - Constructed prompt:
Please analyze the following multiple choice question and provide your answer with reasoning.

Question: ㈜대한은 20x1년 1월 1일에 취득하여 본사 사옥으로 사용하고 있던 건물(취득원가 ￦2,000,000, 내용연수 20년, 잔존가치 ￦200,000, 정액법 상각)을 20x3년 7월 1일에 ㈜민국에게 운용리스 목적으로 제공하였다. ㈜대한은 투자부동산에 대해서 공정가치모형을 적용하고 있으며, 유형자산에 대해서는 원가모형을 적용하고 있다. 건물의 공정가치는 다음과 같다.

Options:
1. ￦45,000 감소
2. ￦455,000 증가
3. ￦500,000 증가
4. ￦600,000 증가
5. ￦1,180,000 증가

아래의 JSON 형식으로 대답을 제공하세요
{
  "selected_answer": "1",  // The number (1-5) of your chosen option
  "reasoning": [
    "1.1번 보기가 왜 정확한지 또는 틀린지",
    "2. 2번 보기가 왜 정확한지 또는 틀린지",
    "3. 3번 보기가 왜 정확한지 또는 틀린지",
    "4. 4번 보기가 왜 정확한지 또는 틀린지",
    "5. 5번 보기가 왜 정확한지 또는 틀린지"
  ]
}
2025-01-03 22:12:41,695 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 22:12:41,695 - openai - DEBUG - api_version=None data='{"model": "o1-mini", "messages": [{"role": "system", "content": "\\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9"}, {"role": "user", "content": "Please analyze the following multiple choice question and provide your answer with reasoning.\\n\\nQuestion: \\u321c\\ub300\\ud55c\\uc740 20x1\\ub144 1\\uc6d4 1\\uc77c\\uc5d0 \\ucde8\\ub4dd\\ud558\\uc5ec \\ubcf8\\uc0ac \\uc0ac\\uc625\\uc73c\\ub85c \\uc0ac\\uc6a9\\ud558\\uace0 \\uc788\\ub358 \\uac74\\ubb3c(\\ucde8\\ub4dd\\uc6d0\\uac00 \\uffe62,000,000, \\ub0b4\\uc6a9\\uc5f0\\uc218 20\\ub144, \\uc794\\uc874\\uac00\\uce58 \\uffe6200,000, \\uc815\\uc561\\ubc95 \\uc0c1\\uac01)\\uc744 20x3\\ub144 7\\uc6d4 1\\uc77c\\uc5d0 \\u321c\\ubbfc\\uad6d\\uc5d0\\uac8c \\uc6b4\\uc6a9\\ub9ac\\uc2a4 \\ubaa9\\uc801\\uc73c\\ub85c \\uc81c\\uacf5\\ud558\\uc600\\ub2e4. \\u321c\\ub300\\ud55c\\uc740 \\ud22c\\uc790\\ubd80\\ub3d9\\uc0b0\\uc5d0 \\ub300\\ud574\\uc11c \\uacf5\\uc815\\uac00\\uce58\\ubaa8\\ud615\\uc744 \\uc801\\uc6a9\\ud558\\uace0 \\uc788\\uc73c\\uba70, \\uc720\\ud615\\uc790\\uc0b0\\uc5d0 \\ub300\\ud574\\uc11c\\ub294 \\uc6d0\\uac00\\ubaa8\\ud615\\uc744 \\uc801\\uc6a9\\ud558\\uace0 \\uc788\\ub2e4. \\uac74\\ubb3c\\uc758 \\uacf5\\uc815\\uac00\\uce58\\ub294 \\ub2e4\\uc74c\\uacfc \\uac19\\ub2e4.\\n\\nOptions:\\n1. \\uffe645,000 \\uac10\\uc18c\\n2. \\uffe6455,000 \\uc99d\\uac00\\n3. \\uffe6500,000 \\uc99d\\uac00\\n4. \\uffe6600,000 \\uc99d\\uac00\\n5. \\uffe61,180,000 \\uc99d\\uac00\\n\\n\\uc544\\ub798\\uc758 JSON \\ud615\\uc2dd\\uc73c\\ub85c \\ub300\\ub2f5\\uc744 \\uc81c\\uacf5\\ud558\\uc138\\uc694\\n{\\n  \\"selected_answer\\": \\"1\\",  // The number (1-5) of your chosen option\\n  \\"reasoning\\": [\\n    \\"1.1\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"2. 2\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"3. 3\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"4. 4\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"5. 5\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 22:12:42,128 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 400 221
2025-01-03 22:12:42,130 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=12 request_id=req_8f964153cde7680a3625ae4c677aebc0 response_code=400
2025-01-03 22:12:42,130 - openai - INFO - error_code=unsupported_value error_message="Unsupported value: 'messages[0].role' does not support 'system' with this model." error_param=messages[0].role error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 22:12:42,131 - src.openai_client - ERROR - Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:42,132 - src.processor - ERROR - Error processing question 'Q8': Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 46, in process_exam
    gpt_response = self.openai_client.get_response(question.question, question.options)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 37, in get_response
    raise ValueError(f"Error during OpenAI API call: {e}")
ValueError: Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:42,134 - src.processor - INFO - Processing question 9/10 (ID: Q9)
2025-01-03 22:12:42,134 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 22:12:42,134 - src.openai_client - DEBUG - Constructed prompt:
Please analyze the following multiple choice question and provide your answer with reasoning.

Question: ㈜대한은 20x1년 3월 1일부터 공장건물 신축공사를 실시하여 20x2년 9월 30일에 해당 공사를 완료하였다. 동 공장건물은 차입원가를 자본화하는 적격자산이다. ㈜대한이 20x2년도에 자본화할 차입원가는 얼마인가?

Options:
1. ￦16,450
2. ￦21,900
3. ￦23,400
4. ￦42,700
5. ￦53,200

아래의 JSON 형식으로 대답을 제공하세요
{
  "selected_answer": "1",  // The number (1-5) of your chosen option
  "reasoning": [
    "1.1번 보기가 왜 정확한지 또는 틀린지",
    "2. 2번 보기가 왜 정확한지 또는 틀린지",
    "3. 3번 보기가 왜 정확한지 또는 틀린지",
    "4. 4번 보기가 왜 정확한지 또는 틀린지",
    "5. 5번 보기가 왜 정확한지 또는 틀린지"
  ]
}
2025-01-03 22:12:42,134 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 22:12:42,134 - openai - DEBUG - api_version=None data='{"model": "o1-mini", "messages": [{"role": "system", "content": "\\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9"}, {"role": "user", "content": "Please analyze the following multiple choice question and provide your answer with reasoning.\\n\\nQuestion: \\u321c\\ub300\\ud55c\\uc740 20x1\\ub144 3\\uc6d4 1\\uc77c\\ubd80\\ud130 \\uacf5\\uc7a5\\uac74\\ubb3c \\uc2e0\\ucd95\\uacf5\\uc0ac\\ub97c \\uc2e4\\uc2dc\\ud558\\uc5ec 20x2\\ub144 9\\uc6d4 30\\uc77c\\uc5d0 \\ud574\\ub2f9 \\uacf5\\uc0ac\\ub97c \\uc644\\ub8cc\\ud558\\uc600\\ub2e4. \\ub3d9 \\uacf5\\uc7a5\\uac74\\ubb3c\\uc740 \\ucc28\\uc785\\uc6d0\\uac00\\ub97c \\uc790\\ubcf8\\ud654\\ud558\\ub294 \\uc801\\uaca9\\uc790\\uc0b0\\uc774\\ub2e4. \\u321c\\ub300\\ud55c\\uc774 20x2\\ub144\\ub3c4\\uc5d0 \\uc790\\ubcf8\\ud654\\ud560 \\ucc28\\uc785\\uc6d0\\uac00\\ub294 \\uc5bc\\ub9c8\\uc778\\uac00?\\n\\nOptions:\\n1. \\uffe616,450\\n2. \\uffe621,900\\n3. \\uffe623,400\\n4. \\uffe642,700\\n5. \\uffe653,200\\n\\n\\uc544\\ub798\\uc758 JSON \\ud615\\uc2dd\\uc73c\\ub85c \\ub300\\ub2f5\\uc744 \\uc81c\\uacf5\\ud558\\uc138\\uc694\\n{\\n  \\"selected_answer\\": \\"1\\",  // The number (1-5) of your chosen option\\n  \\"reasoning\\": [\\n    \\"1.1\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"2. 2\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"3. 3\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"4. 4\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"5. 5\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 22:12:42,536 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 400 221
2025-01-03 22:12:42,538 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=12 request_id=req_4505cb7dea22cc5ce9cd9e61aad9604d response_code=400
2025-01-03 22:12:42,538 - openai - INFO - error_code=unsupported_value error_message="Unsupported value: 'messages[0].role' does not support 'system' with this model." error_param=messages[0].role error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 22:12:42,539 - src.openai_client - ERROR - Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:42,540 - src.processor - ERROR - Error processing question 'Q9': Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 46, in process_exam
    gpt_response = self.openai_client.get_response(question.question, question.options)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 37, in get_response
    raise ValueError(f"Error during OpenAI API call: {e}")
ValueError: Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:42,542 - src.processor - INFO - Processing question 10/10 (ID: Q10)
2025-01-03 22:12:42,542 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 22:12:42,542 - src.openai_client - DEBUG - Constructed prompt:
Please analyze the following multiple choice question and provide your answer with reasoning.

Question: ㈜대한은 ㈜민국이 20x1년 1월 1일에 발행한 사채를 발행일에 취득하였으며, 취득 시 동 사채를 기타포괄손익-공정가치 측정 금융자산(FVOCI 금융자산)으로 분류하였다. ㈜대한의 상기 금융자산이 (1)20x1년도 총포괄이익에 미치는 영향과 (2)20x2년도 당기순이익에 미치는 영향은 각각 얼마인가?

Options:
1. ￦206,520 감소, ￦213,200 증가
2. ￦206,520 감소, ￦231,400 증가
3. ￦186,520 감소, ￦213,200 증가
4. ￦186,520 감소, ￦231,400 증가
5. ￦186,520 감소, ￦121,200 증가

아래의 JSON 형식으로 대답을 제공하세요
{
  "selected_answer": "1",  // The number (1-5) of your chosen option
  "reasoning": [
    "1.1번 보기가 왜 정확한지 또는 틀린지",
    "2. 2번 보기가 왜 정확한지 또는 틀린지",
    "3. 3번 보기가 왜 정확한지 또는 틀린지",
    "4. 4번 보기가 왜 정확한지 또는 틀린지",
    "5. 5번 보기가 왜 정확한지 또는 틀린지"
  ]
}
2025-01-03 22:12:42,542 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 22:12:42,542 - openai - DEBUG - api_version=None data='{"model": "o1-mini", "messages": [{"role": "system", "content": "\\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9"}, {"role": "user", "content": "Please analyze the following multiple choice question and provide your answer with reasoning.\\n\\nQuestion: \\u321c\\ub300\\ud55c\\uc740 \\u321c\\ubbfc\\uad6d\\uc774 20x1\\ub144 1\\uc6d4 1\\uc77c\\uc5d0 \\ubc1c\\ud589\\ud55c \\uc0ac\\ucc44\\ub97c \\ubc1c\\ud589\\uc77c\\uc5d0 \\ucde8\\ub4dd\\ud558\\uc600\\uc73c\\uba70, \\ucde8\\ub4dd \\uc2dc \\ub3d9 \\uc0ac\\ucc44\\ub97c \\uae30\\ud0c0\\ud3ec\\uad04\\uc190\\uc775-\\uacf5\\uc815\\uac00\\uce58 \\uce21\\uc815 \\uae08\\uc735\\uc790\\uc0b0(FVOCI \\uae08\\uc735\\uc790\\uc0b0)\\uc73c\\ub85c \\ubd84\\ub958\\ud558\\uc600\\ub2e4. \\u321c\\ub300\\ud55c\\uc758 \\uc0c1\\uae30 \\uae08\\uc735\\uc790\\uc0b0\\uc774 (1)20x1\\ub144\\ub3c4 \\ucd1d\\ud3ec\\uad04\\uc774\\uc775\\uc5d0 \\ubbf8\\uce58\\ub294 \\uc601\\ud5a5\\uacfc (2)20x2\\ub144\\ub3c4 \\ub2f9\\uae30\\uc21c\\uc774\\uc775\\uc5d0 \\ubbf8\\uce58\\ub294 \\uc601\\ud5a5\\uc740 \\uac01\\uac01 \\uc5bc\\ub9c8\\uc778\\uac00?\\n\\nOptions:\\n1. \\uffe6206,520 \\uac10\\uc18c, \\uffe6213,200 \\uc99d\\uac00\\n2. \\uffe6206,520 \\uac10\\uc18c, \\uffe6231,400 \\uc99d\\uac00\\n3. \\uffe6186,520 \\uac10\\uc18c, \\uffe6213,200 \\uc99d\\uac00\\n4. \\uffe6186,520 \\uac10\\uc18c, \\uffe6231,400 \\uc99d\\uac00\\n5. \\uffe6186,520 \\uac10\\uc18c, \\uffe6121,200 \\uc99d\\uac00\\n\\n\\uc544\\ub798\\uc758 JSON \\ud615\\uc2dd\\uc73c\\ub85c \\ub300\\ub2f5\\uc744 \\uc81c\\uacf5\\ud558\\uc138\\uc694\\n{\\n  \\"selected_answer\\": \\"1\\",  // The number (1-5) of your chosen option\\n  \\"reasoning\\": [\\n    \\"1.1\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"2. 2\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"3. 3\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"4. 4\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\",\\n    \\"5. 5\\ubc88 \\ubcf4\\uae30\\uac00 \\uc65c \\uc815\\ud655\\ud55c\\uc9c0 \\ub610\\ub294 \\ud2c0\\ub9b0\\uc9c0\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 22:12:42,945 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 400 221
2025-01-03 22:12:42,947 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=8 request_id=req_e2fbc89f23ff06df89791bb868c5374a response_code=400
2025-01-03 22:12:42,948 - openai - INFO - error_code=unsupported_value error_message="Unsupported value: 'messages[0].role' does not support 'system' with this model." error_param=messages[0].role error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 22:12:42,948 - src.openai_client - ERROR - Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:42,950 - src.processor - ERROR - Error processing question 'Q10': Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 25, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: Unsupported value: 'messages[0].role' does not support 'system' with this model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 46, in process_exam
    gpt_response = self.openai_client.get_response(question.question, question.options)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 37, in get_response
    raise ValueError(f"Error during OpenAI API call: {e}")
ValueError: Error during OpenAI API call: Unsupported value: 'messages[0].role' does not support 'system' with this model.
2025-01-03 22:12:42,954 - src.processor - INFO - Debug information saved to output/debug/2023_1형_debug.json
2025-01-03 22:12:42,954 - src.processor - INFO - Completed processing of exam '2023_1형' with 0 results
2025-01-03 22:12:42,954 - src.processor - INFO - Exam duration: 4.81s, Accuracy: 0.00%
2025-01-03 22:12:42,954 - src.visualizer - INFO - Generating exam summary
2025-01-03 22:12:42,962 - src.visualizer - INFO - Exam summary saved to output/exam_summary.csv
2025-01-03 22:12:42,962 - src.visualizer - INFO - Generating timing visualizations
2025-01-03 22:12:42,973 - matplotlib.pyplot - DEBUG - Loaded backend macosx version unknown.
2025-01-03 22:12:43,087 - matplotlib.font_manager - DEBUG - findfont: Matching AppleGothic:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-01-03 22:12:43,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e9a9a2d18358033875835a6228cb70ce84b7e47c.asset/AssetData/YuMincho.ttc', name='YuMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/a3f9a9e35bdf3babe03b2fd162051306fad439d6.asset/AssetData/Osaka.ttf', name='Osaka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/eb257c12d1a51c8c661b89f30eec56cacf9b8987.asset/AssetData/STHEITI.ttf', name='STHeiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/54ef167d6c8e99a69a0d41ce252cc5995ba47580.asset/AssetData/YuGothic-Medium.otf', name='YuGothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9fdda46cbe802833590494a09b2787378340c597.asset/AssetData/Hanzipen.ttc', name='HanziPen SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/18189590ed3a5f46cef20ed4d1cec2611dca13ff.asset/AssetData/WawaSC-Regular.otf', name='Wawati SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/6f4c91728bb824d6960725ec479c355eab7eeba8.asset/AssetData/NanumScript.ttc', name='Nanum Brush Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/8739f5cf483d3b2f04cbb451d310b68f0cf880d0.asset/AssetData/ToppanBunkyuMinchoPr6N-Regular.otf', name='Toppan Bunkyu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f879347736afb6e4e0880bcede9df92492c0f040.asset/AssetData/Gungseouche.ttf', name='GungSeo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/de97612eef4e3cf8ee8e5c0ebd6fd879bbecd23a.asset/AssetData/AppleLiGothic-Medium.ttf', name='Apple LiGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/c2cf5e684236b5395fd48d6ccf0e3b3191ce83a0.asset/AssetData/PCmyoungjo.ttf', name='PCMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/8dc7805506cc9f233dcc19aabf593196842a47ae.asset/AssetData/Hannotate.ttc', name='Hannotate SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5f2614e7b55639e709d8578e16b324b3eb6eb065.asset/AssetData/BMHannaPro-Regular.otf', name='BM Hanna Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/d7d512f49387f96799ae9271c7fa8f8e9fef05d1.asset/AssetData/BIZ_UDGothic.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e28431125242b9a298de3296370abdab4a7e8666.asset/AssetData/YuppyTC-Regular.otf', name='Yuppy TC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/7278ac2566252649b05c5a2b07c7d45be59f47c5.asset/AssetData/Libian.ttc', name='Libian SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/42062e40d643fdb5bb3fba917212352fb0690de0.asset/AssetData/YuGothic-Bold.otf', name='YuGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/aa99d0b2bad7f797f38b49d46cde28fd4b58876e.asset/AssetData/Xingkai.ttc', name='Xingkai SC', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/3d7c99b85a518ffb479044c11185e47744b6448d.asset/AssetData/WawaTC-Regular.otf', name='Wawati TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/32d11e548996658757774d88f9220993653017ea.asset/AssetData/Hiragino_Sans_CNS.ttc', name='Hiragino Sans CNS', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/62032b9b64a0e3a9121c50aeb2ed794e3e2c201f.asset/AssetData/Hei.ttf', name='Hei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/96af7ec9e88d5dae450d3162213f92a7b1129430.asset/AssetData/YuppySC-Regular.otf', name='Yuppy SC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f7f6b250e97c182e68ac53a2b359ec44548878b9.asset/AssetData/Lantinghei.ttc', name='Lantinghei SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/857d6c90171c328a4892c1492291d34e401d7f25.asset/AssetData/SimSong.ttc', name='SimSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/cd59971ded42add9070aa2172265ba7fcf8d9327.asset/AssetData/BMKirangHaerang-Regular.otf', name='BM Kirang Haerang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/a8805b853edf89283dec908153a0015bdd1d00f8.asset/AssetData/WeibeiSC-Bold.otf', name='Weibei SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5a3fc034b64879656271c040cab38b65d4ea6548.asset/AssetData/LiSongPro.ttf', name='LiSong Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/938fc4f0524ec9f143f1b39a4e63ff9585298376.asset/AssetData/ToppanBunkyuMidashiGothicStdN-ExtraBold.otf', name='Toppan Bunkyu Midashi Gothic', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/12cc699be28fb04f3e3c4969a0378a87b920b174.asset/AssetData/BMHannaAir-Regular.otf', name='BM Hanna Air', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e71ea5469e5f2039223f22203ee8b9186524afd3.asset/AssetData/BMDoHyeon-Regular.otf', name='BM Dohyeon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/bad9b4bf17cf1669dde54184ba4431c22dcad27b.asset/AssetData/NanumGothic.ttc', name='Nanum Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/10b097deccb3c6126d986e24b1980031ff7399da.asset/AssetData/TsukushiBMaruGothic.ttc', name='Tsukushi B Round Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/7ca27bc02dd7660f9dacd69df96d24639b96e080.asset/AssetData/Pilgiche.ttf', name='PilGi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f0706a236683628e16427c6569e441423faaaa93.asset/AssetData/STXIHEI.ttf', name='STHeiti', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5b843781be7f58151ada774942a0eaa9ec79bd57.asset/AssetData/Kyokasho.ttc', name='YuKyokasho Yoko', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/40e56e4eafd8b4db78ffe316f64ac4bedba37b53.asset/AssetData/ToppanBunkyuMidashiMinchoStdN-ExtraBold.otf', name='Toppan Bunkyu Midashi Mincho', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5b2f5f0b003344b2c67ce463e76d2485bb43d054.asset/AssetData/BMJua-Regular.otf', name='BM Jua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/28f00a24ba19995bab7249993e6e35d11011074a.asset/AssetData/Kai.ttf', name='Kai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/0818d874bf1d0e24a1fe62e79f407717792c5ee1.asset/AssetData/OsakaMono.ttf', name='Osaka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/54a2ad3dac6cac875ad675d7d273dc425010a877.asset/AssetData/Kaiti.ttc', name='Kaiti SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/1821952872c81043711aab6910052b65da8edf2c.asset/AssetData/STFANGSO.ttf', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/157acc4d862730d6d5beaa943546f80a71948c7b.asset/AssetData/BMHanna11yrs-Regular.otf', name='BM Hanna 11yrs Old', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9d5450ee93f17da1eacfa01b5e7b598f9e2dda2b.asset/AssetData/Baoli.ttc', name='Baoli SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/b86e58f38fd21e9782e70a104676f1655e72ebab.asset/AssetData/Yuanti.ttc', name='Yuanti SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/b8cf53b3591d6062cd536ba5129454cba899a078.asset/AssetData/LingWaiTC-Medium.otf', name='LingWai TC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/de4b2bad515a67ab2d11e39fd896b1e189252a43.asset/AssetData/HeadlineA.ttf', name='HeadLineA', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/584ea2a48d14147049c2f9eaee147fe5a1f279ac.asset/AssetData/BiauKai.ttc', name='BiauKaiHK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9bcdfd464af84ab30592d781f4a82f44f548239c.asset/AssetData/BMYeongSung-Regular.otf', name='BM Yeonsung', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/0ab217c39c45c7c6acaddfa199fd32c55a7b4a19.asset/AssetData/ToppanBunkyuGothicPr6N.ttc', name='Toppan Bunkyu Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/3a9dbc8ddc8b85f43055a28fb5d551e905d43de2.asset/AssetData/LiHeiPro.ttf', name='LiHei Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/70816a43827731d40efe234b94feba96db91024f.asset/AssetData/NanumMyeongjo.ttc', name='Nanum Myeongjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f110a45f1759f86c645cfd2f47baba57aa50056e.asset/AssetData/Klee.ttc', name='Klee', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/2ae839cbaa0ff60fe6a1d8921a77c81adcec0646.asset/AssetData/AppleLiSung-Light.ttf', name='Apple LiSung', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/d9a8a6ae726910080d90232eaf0edb06da712758.asset/AssetData/TsukushiAMaruGothic.ttc', name='Tsukushi A Round Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/ad8c3bb76851adc11dc4772c1a7a00caf83e3037.asset/AssetData/Ornanong.ttc', name='PSL Ornanong Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e617c1b15920c6ee2d047ed8724de08521ce5c9a.asset/AssetData/BIZ_UDMincho-regular.ttf', name='BIZ UDMincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e2c331b942cb338404a160a97a7cd6e8a31428e8.asset/AssetData/LingWaiSC-Medium.otf', name='LingWai SC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,098 - matplotlib.font_manager - DEBUG - findfont: Matching AppleGothic:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to AppleGothic ('/System/Library/Fonts/Supplemental/AppleGothic.ttf') with score of 0.050000.
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: Matching AppleGothic:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e9a9a2d18358033875835a6228cb70ce84b7e47c.asset/AssetData/YuMincho.ttc', name='YuMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/a3f9a9e35bdf3babe03b2fd162051306fad439d6.asset/AssetData/Osaka.ttf', name='Osaka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/eb257c12d1a51c8c661b89f30eec56cacf9b8987.asset/AssetData/STHEITI.ttf', name='STHeiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/54ef167d6c8e99a69a0d41ce252cc5995ba47580.asset/AssetData/YuGothic-Medium.otf', name='YuGothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9fdda46cbe802833590494a09b2787378340c597.asset/AssetData/Hanzipen.ttc', name='HanziPen SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/18189590ed3a5f46cef20ed4d1cec2611dca13ff.asset/AssetData/WawaSC-Regular.otf', name='Wawati SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/6f4c91728bb824d6960725ec479c355eab7eeba8.asset/AssetData/NanumScript.ttc', name='Nanum Brush Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/8739f5cf483d3b2f04cbb451d310b68f0cf880d0.asset/AssetData/ToppanBunkyuMinchoPr6N-Regular.otf', name='Toppan Bunkyu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f879347736afb6e4e0880bcede9df92492c0f040.asset/AssetData/Gungseouche.ttf', name='GungSeo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/de97612eef4e3cf8ee8e5c0ebd6fd879bbecd23a.asset/AssetData/AppleLiGothic-Medium.ttf', name='Apple LiGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/c2cf5e684236b5395fd48d6ccf0e3b3191ce83a0.asset/AssetData/PCmyoungjo.ttf', name='PCMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/8dc7805506cc9f233dcc19aabf593196842a47ae.asset/AssetData/Hannotate.ttc', name='Hannotate SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5f2614e7b55639e709d8578e16b324b3eb6eb065.asset/AssetData/BMHannaPro-Regular.otf', name='BM Hanna Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/d7d512f49387f96799ae9271c7fa8f8e9fef05d1.asset/AssetData/BIZ_UDGothic.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e28431125242b9a298de3296370abdab4a7e8666.asset/AssetData/YuppyTC-Regular.otf', name='Yuppy TC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/7278ac2566252649b05c5a2b07c7d45be59f47c5.asset/AssetData/Libian.ttc', name='Libian SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/42062e40d643fdb5bb3fba917212352fb0690de0.asset/AssetData/YuGothic-Bold.otf', name='YuGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/aa99d0b2bad7f797f38b49d46cde28fd4b58876e.asset/AssetData/Xingkai.ttc', name='Xingkai SC', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/3d7c99b85a518ffb479044c11185e47744b6448d.asset/AssetData/WawaTC-Regular.otf', name='Wawati TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/32d11e548996658757774d88f9220993653017ea.asset/AssetData/Hiragino_Sans_CNS.ttc', name='Hiragino Sans CNS', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/62032b9b64a0e3a9121c50aeb2ed794e3e2c201f.asset/AssetData/Hei.ttf', name='Hei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/96af7ec9e88d5dae450d3162213f92a7b1129430.asset/AssetData/YuppySC-Regular.otf', name='Yuppy SC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f7f6b250e97c182e68ac53a2b359ec44548878b9.asset/AssetData/Lantinghei.ttc', name='Lantinghei SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/857d6c90171c328a4892c1492291d34e401d7f25.asset/AssetData/SimSong.ttc', name='SimSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/cd59971ded42add9070aa2172265ba7fcf8d9327.asset/AssetData/BMKirangHaerang-Regular.otf', name='BM Kirang Haerang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/a8805b853edf89283dec908153a0015bdd1d00f8.asset/AssetData/WeibeiSC-Bold.otf', name='Weibei SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5a3fc034b64879656271c040cab38b65d4ea6548.asset/AssetData/LiSongPro.ttf', name='LiSong Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/938fc4f0524ec9f143f1b39a4e63ff9585298376.asset/AssetData/ToppanBunkyuMidashiGothicStdN-ExtraBold.otf', name='Toppan Bunkyu Midashi Gothic', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/12cc699be28fb04f3e3c4969a0378a87b920b174.asset/AssetData/BMHannaAir-Regular.otf', name='BM Hanna Air', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e71ea5469e5f2039223f22203ee8b9186524afd3.asset/AssetData/BMDoHyeon-Regular.otf', name='BM Dohyeon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/bad9b4bf17cf1669dde54184ba4431c22dcad27b.asset/AssetData/NanumGothic.ttc', name='Nanum Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/10b097deccb3c6126d986e24b1980031ff7399da.asset/AssetData/TsukushiBMaruGothic.ttc', name='Tsukushi B Round Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/7ca27bc02dd7660f9dacd69df96d24639b96e080.asset/AssetData/Pilgiche.ttf', name='PilGi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f0706a236683628e16427c6569e441423faaaa93.asset/AssetData/STXIHEI.ttf', name='STHeiti', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5b843781be7f58151ada774942a0eaa9ec79bd57.asset/AssetData/Kyokasho.ttc', name='YuKyokasho Yoko', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/40e56e4eafd8b4db78ffe316f64ac4bedba37b53.asset/AssetData/ToppanBunkyuMidashiMinchoStdN-ExtraBold.otf', name='Toppan Bunkyu Midashi Mincho', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5b2f5f0b003344b2c67ce463e76d2485bb43d054.asset/AssetData/BMJua-Regular.otf', name='BM Jua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/28f00a24ba19995bab7249993e6e35d11011074a.asset/AssetData/Kai.ttf', name='Kai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/0818d874bf1d0e24a1fe62e79f407717792c5ee1.asset/AssetData/OsakaMono.ttf', name='Osaka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/54a2ad3dac6cac875ad675d7d273dc425010a877.asset/AssetData/Kaiti.ttc', name='Kaiti SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/1821952872c81043711aab6910052b65da8edf2c.asset/AssetData/STFANGSO.ttf', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/157acc4d862730d6d5beaa943546f80a71948c7b.asset/AssetData/BMHanna11yrs-Regular.otf', name='BM Hanna 11yrs Old', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9d5450ee93f17da1eacfa01b5e7b598f9e2dda2b.asset/AssetData/Baoli.ttc', name='Baoli SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/b86e58f38fd21e9782e70a104676f1655e72ebab.asset/AssetData/Yuanti.ttc', name='Yuanti SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/b8cf53b3591d6062cd536ba5129454cba899a078.asset/AssetData/LingWaiTC-Medium.otf', name='LingWai TC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/de4b2bad515a67ab2d11e39fd896b1e189252a43.asset/AssetData/HeadlineA.ttf', name='HeadLineA', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/584ea2a48d14147049c2f9eaee147fe5a1f279ac.asset/AssetData/BiauKai.ttc', name='BiauKaiHK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9bcdfd464af84ab30592d781f4a82f44f548239c.asset/AssetData/BMYeongSung-Regular.otf', name='BM Yeonsung', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/0ab217c39c45c7c6acaddfa199fd32c55a7b4a19.asset/AssetData/ToppanBunkyuGothicPr6N.ttc', name='Toppan Bunkyu Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 22:12:43,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/3a9dbc8ddc8b85f43055a28fb5d551e905d43de2.asset/AssetData/LiHeiPro.ttf', name='LiHei Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/70816a43827731d40efe234b94feba96db91024f.asset/AssetData/NanumMyeongjo.ttc', name='Nanum Myeongjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f110a45f1759f86c645cfd2f47baba57aa50056e.asset/AssetData/Klee.ttc', name='Klee', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/2ae839cbaa0ff60fe6a1d8921a77c81adcec0646.asset/AssetData/AppleLiSung-Light.ttf', name='Apple LiSung', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/d9a8a6ae726910080d90232eaf0edb06da712758.asset/AssetData/TsukushiAMaruGothic.ttc', name='Tsukushi A Round Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/ad8c3bb76851adc11dc4772c1a7a00caf83e3037.asset/AssetData/Ornanong.ttc', name='PSL Ornanong Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e617c1b15920c6ee2d047ed8724de08521ce5c9a.asset/AssetData/BIZ_UDMincho-regular.ttf', name='BIZ UDMincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e2c331b942cb338404a160a97a7cd6e8a31428e8.asset/AssetData/LingWaiSC-Medium.otf', name='LingWai SC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 22:12:43,122 - matplotlib.font_manager - DEBUG - findfont: Matching AppleGothic:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to AppleGothic ('/System/Library/Fonts/Supplemental/AppleGothic.ttf') with score of 0.050000.
2025-01-03 22:12:43,202 - __main__ - ERROR - An error occurred during exam processing: zero-size array to reduction operation fmin which has no identity
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/main.py", line 55, in process_single_exam
    visualizer.generate_timing_visualization(results)
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/visualizer.py", line 100, in generate_timing_visualization
    sns.heatmap(timing_matrix, annot=True, fmt='.1f', cmap='YlOrRd')
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/seaborn/matrix.py", line 446, in heatmap
    plotter = _HeatMapper(data, vmin, vmax, cmap, center, robust, annot, fmt,
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/seaborn/matrix.py", line 163, in __init__
    self._determine_cmap_params(plot_data, vmin, vmax,
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/seaborn/matrix.py", line 202, in _determine_cmap_params
    vmin = np.nanmin(calc_data)
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/numpy/lib/_nanfunctions_impl.py", line 357, in nanmin
    res = np.fmin.reduce(a, axis=axis, out=out, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: zero-size array to reduction operation fmin which has no identity
2025-01-03 22:12:43,204 - __main__ - INFO - Program completed
