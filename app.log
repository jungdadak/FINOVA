2025-01-03 18:38:19,645 - __main__ - INFO - 프로그램 시작
2025-01-03 18:38:19,646 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:38:19,646 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:38:19,647 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:38:19,659 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:38:19,659 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 19, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 32, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:38:19,661 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:38:19,661 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:38:19,802 - __main__ - ERROR - 시험 처리 중 오류 발생: Invalid vertices array.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/main.py", line 46, in main
    visualizer.generate_score_visualization(results, exam_name)
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/visualizer.py", line 29, in generate_score_visualization
    plt.pie(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/_api/deprecation.py", line 453, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/pyplot.py", line 3797, in pie
    return gca().pie(
           ^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/_api/deprecation.py", line 453, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/__init__.py", line 1521, in inner
    return func(
           ^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/axes/_axes.py", line 3403, in pie
    self.add_patch(mpatches.Shadow(w, **shadow_dict))
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/axes/_base.py", line 2446, in add_patch
    self._update_patch_limits(p)
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/axes/_base.py", line 2488, in _update_patch_limits
    xys = trf_to_data.transform(vertices)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/transforms.py", line 1784, in transform
    return self.transform_affine(values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/transforms.py", line 1853, in transform_affine
    return affine_transform(values, mtx)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Invalid vertices array.
2025-01-03 18:41:30,900 - __main__ - INFO - 프로그램 시작
2025-01-03 18:41:30,900 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:41:30,901 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:41:30,901 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:41:30,913 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:41:30,913 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 18:41:30,913 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:41:30,914 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 39, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:41:30,915 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:41:30,915 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:41:30,915 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 18:41:30,915 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 18:41:30,915 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 18:41:30,915 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 18:41:30,915 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 18:41:42,764 - __main__ - INFO - 프로그램 시작
2025-01-03 18:41:42,765 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:41:42,765 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:41:42,765 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:41:42,772 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:41:42,772 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 18:41:42,772 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:41:42,773 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 39, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:41:42,774 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:41:42,774 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:41:42,774 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 18:41:42,774 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 18:41:42,774 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 18:41:42,774 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 18:41:42,774 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 18:42:48,034 - __main__ - INFO - 프로그램 시작
2025-01-03 18:42:48,034 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:42:48,034 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:42:48,035 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:42:48,047 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:42:48,047 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 18:42:48,047 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:42:48,049 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 39, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:42:48,050 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:42:48,050 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:42:48,050 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 18:42:48,050 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 18:42:48,050 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 18:42:48,050 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 18:42:48,050 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 18:46:19,805 - __main__ - INFO - 프로그램 시작
2025-01-03 18:46:19,805 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:46:19,805 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:46:19,806 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:46:19,816 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:46:19,817 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 18:46:19,817 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:46:19,818 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 39, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:46:19,819 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:46:19,819 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:46:19,819 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 18:46:19,819 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 18:46:19,819 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 18:46:19,819 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 18:46:19,819 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 18:47:47,359 - __main__ - INFO - 프로그램 시작
2025-01-03 18:47:47,359 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:47:47,359 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:47:47,360 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:47:47,375 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:47:47,375 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 18:47:47,375 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:47:47,376 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/lib/_old_api.py", line 39, in __call__
    raise APIRemovedInV1(symbol=self._symbol)
openai.lib._old_api.APIRemovedInV1: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 39, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-01-03 18:47:47,377 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:47:47,378 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:47:47,378 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 18:47:47,378 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 18:47:47,378 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 18:47:47,378 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 18:47:47,378 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 18:48:41,040 - __main__ - INFO - 프로그램 시작
2025-01-03 18:48:41,040 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:48:41,040 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:48:41,040 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:48:41,052 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:48:41,052 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 18:48:44,240 - openai - INFO - error_code=model_not_found error_message='The model `gpt-4o` does not exist or you do not have access to it.' error_param=None error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 18:48:44,242 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: The model `gpt-4o` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4o` does not exist or you do not have access to it.
2025-01-03 18:48:44,246 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: The model `gpt-4o` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4o` does not exist or you do not have access to it.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 39, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: The model `gpt-4o` does not exist or you do not have access to it.
2025-01-03 18:48:44,248 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:48:44,248 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:48:44,248 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 18:48:44,248 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 18:48:44,248 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 18:48:44,248 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 18:48:44,248 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 18:49:59,888 - __main__ - INFO - 프로그램 시작
2025-01-03 18:49:59,889 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:49:59,889 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:49:59,889 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:49:59,899 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:49:59,899 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 18:50:00,529 - openai - INFO - error_code=model_not_found error_message='The model `gpt-4o` does not exist or you do not have access to it.' error_param=None error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 18:50:00,530 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: The model `gpt-4o` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.Completion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4o` does not exist or you do not have access to it.
2025-01-03 18:50:00,534 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: The model `gpt-4o` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.Completion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4o` does not exist or you do not have access to it.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 35, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: The model `gpt-4o` does not exist or you do not have access to it.
2025-01-03 18:50:00,537 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:50:00,537 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:50:00,537 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 18:50:00,537 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 18:50:00,537 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 18:50:00,537 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 18:50:00,537 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 18:51:11,543 - __main__ - INFO - 프로그램 시작
2025-01-03 18:51:11,543 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:51:11,543 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:51:11,543 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:51:11,553 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:51:11,553 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 18:51:12,974 - openai - INFO - error_code=model_not_found error_message='The model `gpt-4` does not exist or you do not have access to it.' error_param=None error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 18:51:12,976 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: The model `gpt-4` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.Completion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4` does not exist or you do not have access to it.
2025-01-03 18:51:12,981 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: The model `gpt-4` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.Completion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4` does not exist or you do not have access to it.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 35, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: The model `gpt-4` does not exist or you do not have access to it.
2025-01-03 18:51:12,984 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:51:12,984 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:51:12,984 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 18:51:12,985 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 18:51:12,985 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 18:51:12,985 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 18:51:12,985 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 18:52:10,927 - __main__ - INFO - 프로그램 시작
2025-01-03 18:52:10,928 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:52:10,928 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:52:10,928 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:52:10,937 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:52:10,938 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 18:52:11,603 - openai - INFO - error_code=model_not_found error_message='The model `gpt-4` does not exist or you do not have access to it.' error_param=None error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 18:52:11,603 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: The model `gpt-4` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4` does not exist or you do not have access to it.
2025-01-03 18:52:11,608 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: The model `gpt-4` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4` does not exist or you do not have access to it.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 39, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: The model `gpt-4` does not exist or you do not have access to it.
2025-01-03 18:52:11,612 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:52:11,613 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:52:11,613 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 18:52:11,613 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 18:52:11,613 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 18:52:11,613 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 18:52:11,613 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 18:53:18,183 - __main__ - INFO - 프로그램 시작
2025-01-03 18:53:18,183 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:53:18,183 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 18:53:18,183 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 18:53:18,194 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 18:53:18,194 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 18:53:18,864 - openai - INFO - error_code=model_not_found error_message='The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.' error_param=None error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 18:53:18,866 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.
2025-01-03 18:53:18,870 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 39, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.
2025-01-03 18:53:18,878 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 18:53:18,881 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 18:53:18,881 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 18:53:18,881 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 18:53:18,881 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 18:53:18,881 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 18:53:18,882 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 19:08:39,419 - __main__ - INFO - 프로그램 시작
2025-01-03 19:08:39,419 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 19:08:39,419 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 19:08:39,420 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 19:08:39,430 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 19:08:39,431 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 19:08:40,126 - openai - INFO - error_code=model_not_found error_message='The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.' error_param=None error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 19:08:40,127 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.
2025-01-03 19:08:40,131 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 39, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: The model `gpt-4o-2024-08-06` does not exist or you do not have access to it.
2025-01-03 19:08:40,134 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 19:08:40,134 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 19:08:40,134 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 19:08:40,134 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 19:08:40,134 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 19:08:40,134 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 19:08:40,134 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 19:12:40,894 - __main__ - INFO - 프로그램 시작
2025-01-03 19:12:40,894 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 19:12:40,894 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 19:12:40,895 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 19:12:40,904 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 19:12:40,904 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 19:12:41,662 - openai - INFO - error_code=model_not_found error_message='The model `gpt-3.5-turbo-0613` has been deprecated, learn more here: https://platform.openai.com/docs/deprecations' error_param=None error_type=invalid_request_error message='OpenAI API error received' stream_error=False
2025-01-03 19:12:41,663 - src.openai_client - ERROR - OpenAI API 호출 중 오류 발생: The model `gpt-3.5-turbo-0613` has been deprecated, learn more here: https://platform.openai.com/docs/deprecations
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-3.5-turbo-0613` has been deprecated, learn more here: https://platform.openai.com/docs/deprecations
2025-01-03 19:12:41,667 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: OpenAI API 호출 중 오류 발생: The model `gpt-3.5-turbo-0613` has been deprecated, learn more here: https://platform.openai.com/docs/deprecations
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 24, in get_response
    response = openai.ChatCompletion.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: The model `gpt-3.5-turbo-0613` has been deprecated, learn more here: https://platform.openai.com/docs/deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 39, in get_response
    raise ValueError(f"OpenAI API 호출 중 오류 발생: {e}")
ValueError: OpenAI API 호출 중 오류 발생: The model `gpt-3.5-turbo-0613` has been deprecated, learn more here: https://platform.openai.com/docs/deprecations
2025-01-03 19:12:41,669 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 19:12:41,670 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 19:12:41,670 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 19:12:41,670 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 19:12:41,670 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 19:12:41,670 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 19:12:41,670 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 19:15:53,776 - __main__ - INFO - 프로그램 시작
2025-01-03 19:15:53,777 - __main__ - INFO - 시험 'test_exam' 처리 시작
2025-01-03 19:15:53,777 - src.processor - INFO - 시험 'test_exam' 처리 시작
2025-01-03 19:15:53,777 - src.processor - INFO - 총 1개의 질문을 처리합니다.
2025-01-03 19:15:53,787 - src.processor - INFO - 시험 'test_exam'의 질문 1/1 (ID: Q1) 처리 시작
2025-01-03 19:15:53,787 - src.openai_client - INFO - OpenAI API 요청 시작
2025-01-03 19:15:58,606 - src.openai_client - INFO - OpenAI API 호출 성공
2025-01-03 19:15:58,607 - src.openai_client - ERROR - GPT 응답 파싱 실패: 1 validation error for GPTResponse
  Invalid JSON: expected value at line 1 column 1 [type=json_invalid, input_value='```json\n{\n  "selected_...니다."\n  ]\n}\n```', input_type=str]
    For further information visit https://errors.pydantic.dev/2.10/v/json_invalid
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 51, in get_response
    parsed_response = GPTResponse.model_validate_json(gpt_output)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/pydantic/main.py", line 656, in model_validate_json
    return cls.__pydantic_validator__.validate_json(json_data, strict=strict, context=context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for GPTResponse
  Invalid JSON: expected value at line 1 column 1 [type=json_invalid, input_value='```json\n{\n  "selected_...니다."\n  ]\n}\n```', input_type=str]
    For further information visit https://errors.pydantic.dev/2.10/v/json_invalid
2025-01-03 19:15:58,610 - src.processor - ERROR - 질문 'Q1' 처리 중 오류 발생: Failed to parse GPT response: 1 validation error for GPTResponse
  Invalid JSON: expected value at line 1 column 1 [type=json_invalid, input_value='```json\n{\n  "selected_...니다."\n  ]\n}\n```', input_type=str]
    For further information visit https://errors.pydantic.dev/2.10/v/json_invalid
Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 51, in get_response
    parsed_response = GPTResponse.model_validate_json(gpt_output)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/pydantic/main.py", line 656, in model_validate_json
    return cls.__pydantic_validator__.validate_json(json_data, strict=strict, context=context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for GPTResponse
  Invalid JSON: expected value at line 1 column 1 [type=json_invalid, input_value='```json\n{\n  "selected_...니다."\n  ]\n}\n```', input_type=str]
    For further information visit https://errors.pydantic.dev/2.10/v/json_invalid

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/processor.py", line 27, in process_exam
    gpt_response = self.openai_client.get_response(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/junghyeon/PycharmProjects/FINOVA_AGENT/src/openai_client.py", line 55, in get_response
    raise ValueError(f"Failed to parse GPT response: {e}")
ValueError: Failed to parse GPT response: 1 validation error for GPTResponse
  Invalid JSON: expected value at line 1 column 1 [type=json_invalid, input_value='```json\n{\n  "selected_...니다."\n  ]\n}\n```', input_type=str]
    For further information visit https://errors.pydantic.dev/2.10/v/json_invalid
2025-01-03 19:15:58,611 - src.processor - INFO - 시험 'test_exam' 전체 처리 완료: 총 0개 질문
2025-01-03 19:15:58,611 - __main__ - INFO - 시험 'test_exam' 처리 완료
2025-01-03 19:15:58,611 - src.visualizer - INFO - 시험 'test_exam'의 점수 분포 시각화 시작
2025-01-03 19:15:58,611 - src.visualizer - WARNING - 결과 리스트가 비어 있습니다. 점수 분포 차트를 생성할 수 없습니다.
2025-01-03 19:15:58,611 - src.visualizer - INFO - 시험 'test_exam'의 수정 사항 테이블 생성 시작
2025-01-03 19:15:58,611 - src.visualizer - INFO - 모든 답변이 정답입니다. 저장할 수정 사항이 없습니다.
2025-01-03 19:15:58,611 - __main__ - INFO - 결과 시각화 완료. 출력 디렉토리: 'output'
2025-01-03 20:23:19,776 - __main__ - INFO - Program started
2025-01-03 20:23:19,776 - src.data_loader - DEBUG - DataLoader initialized with data_dir: data
2025-01-03 20:23:19,776 - src.openai_client - DEBUG - OpenAIClient initialized with model_name: gpt-4o-mini
2025-01-03 20:23:19,776 - src.processor - DEBUG - Processor initialized
2025-01-03 20:23:19,776 - src.visualizer - DEBUG - Visualizer initialized with output_dir: output
2025-01-03 20:23:19,776 - __main__ - INFO - Starting processing of exam 'test_exam'
2025-01-03 20:23:19,777 - src.processor - INFO - Starting processing of exam 'test_exam'
2025-01-03 20:23:19,777 - src.data_loader - DEBUG - Loaded question ID: Q1 from 1.json
2025-01-03 20:23:19,777 - src.processor - INFO - Processing 1 questions for exam 'test_exam'
2025-01-03 20:23:19,785 - src.processor - INFO - Processing question 1/1 (ID: Q1)
2025-01-03 20:23:19,785 - src.openai_client - INFO - Starting OpenAI API request
2025-01-03 20:23:19,785 - src.openai_client - DEBUG - Constructed prompt:
Please provide the correct answer and reasoning for each option in JSON format.

Question: 아래 문제들에서 특별한 언급이 없는 한 기업의 보고기간(회계기간)은
매년 1월 1일부터 12월 31일까지이다. 자료에서 제시한 것 외의
사항은 고려하지 않고 답한다. 예를 들어, 법인세에 대한 언급이
없으면 법인세효과는 고려하지 않는다. 또한 기업은 주권상장법인으로
계속해서 한국채택국제회계기준(K-IFRS)을 적용해오고 있다고
가정하고 보기 중에서 물음에 가장 합당한 답을 고르시오.재무보고를 위한 개념체계’에 대한 다음 설명 중 옳지 않은 것은?

Options:
1. 보고기업이 지배-종속관계로 모두 연결되어 있지는 않은 둘 이상
실체들로 구성된다면 그 보고기업의 재무제표를 ‘비연결재무제표’
라고 부른다.
2. 일반목적재무보고서의 대상이 되는 주요이용자는 필요한 재무
정보의 많은 부분을 일반목적재무제표에 의존해야 하는 현재
및 잠재적 투자자, 대여자와 그 밖의 채권자를 말한다.
3. 만일 어떤 두 가지 방법이 모두 현상에 대하여 동일하게 목적
적합한 정보이고 동일하게 충실한 표현을 제공하는 것이라면,
보강적 질적특성은 이 두 가지 방법 가운데 어느 방법을 그 현상의
서술에 사용해야 할지를 결정하는 데 도움을 줄 수 있다.
4. 일반적으로 재무제표는 계속기업가정 하에 작성되나, 기업이
청산을 하거나 거래를 중단하려는 의도가 있다면 계속기업과는
다른 기준에 따라 작성되어야 하고 사용한 기준을 재무제표에
기술한다
5. 일반목적재무보고의 목적을 달성하기 위해 회계기준위원회는
‘개념체계’의 관점에서 벗어난 요구사항을 정하는 경우가 있을
수 있다.

Response format:
{
  "selected_answer": "1",
  "reasoning": [
    "1. ...",
    "2. ...",
    "3. ...",
    "4. ...",
    "5. ..."
  ]
}
2025-01-03 20:23:19,798 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2025-01-03 20:23:19,798 - openai - DEBUG - api_version=None data='{"model": "gpt-4o-mini", "messages": [{"role": "system", "content": "You are an AI that answers multiple-choice questions with explanations for each option."}, {"role": "user", "content": "Please provide the correct answer and reasoning for each option in JSON format.\\n\\nQuestion: \\uc544\\ub798 \\ubb38\\uc81c\\ub4e4\\uc5d0\\uc11c \\ud2b9\\ubcc4\\ud55c \\uc5b8\\uae09\\uc774 \\uc5c6\\ub294 \\ud55c \\uae30\\uc5c5\\uc758 \\ubcf4\\uace0\\uae30\\uac04(\\ud68c\\uacc4\\uae30\\uac04)\\uc740\\n\\ub9e4\\ub144 1\\uc6d4 1\\uc77c\\ubd80\\ud130 12\\uc6d4 31\\uc77c\\uae4c\\uc9c0\\uc774\\ub2e4. \\uc790\\ub8cc\\uc5d0\\uc11c \\uc81c\\uc2dc\\ud55c \\uac83 \\uc678\\uc758\\n\\uc0ac\\ud56d\\uc740 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\uace0 \\ub2f5\\ud55c\\ub2e4. \\uc608\\ub97c \\ub4e4\\uc5b4, \\ubc95\\uc778\\uc138\\uc5d0 \\ub300\\ud55c \\uc5b8\\uae09\\uc774\\n\\uc5c6\\uc73c\\uba74 \\ubc95\\uc778\\uc138\\ud6a8\\uacfc\\ub294 \\uace0\\ub824\\ud558\\uc9c0 \\uc54a\\ub294\\ub2e4. \\ub610\\ud55c \\uae30\\uc5c5\\uc740 \\uc8fc\\uad8c\\uc0c1\\uc7a5\\ubc95\\uc778\\uc73c\\ub85c\\n\\uacc4\\uc18d\\ud574\\uc11c \\ud55c\\uad6d\\ucc44\\ud0dd\\uad6d\\uc81c\\ud68c\\uacc4\\uae30\\uc900(K-IFRS)\\uc744 \\uc801\\uc6a9\\ud574\\uc624\\uace0 \\uc788\\ub2e4\\uace0\\n\\uac00\\uc815\\ud558\\uace0 \\ubcf4\\uae30 \\uc911\\uc5d0\\uc11c \\ubb3c\\uc74c\\uc5d0 \\uac00\\uc7a5 \\ud569\\ub2f9\\ud55c \\ub2f5\\uc744 \\uace0\\ub974\\uc2dc\\uc624.\\uc7ac\\ubb34\\ubcf4\\uace0\\ub97c \\uc704\\ud55c \\uac1c\\ub150\\uccb4\\uacc4\\u2019\\uc5d0 \\ub300\\ud55c \\ub2e4\\uc74c \\uc124\\uba85 \\uc911 \\uc633\\uc9c0 \\uc54a\\uc740 \\uac83\\uc740?\\n\\nOptions:\\n1. \\ubcf4\\uace0\\uae30\\uc5c5\\uc774 \\uc9c0\\ubc30-\\uc885\\uc18d\\uad00\\uacc4\\ub85c \\ubaa8\\ub450 \\uc5f0\\uacb0\\ub418\\uc5b4 \\uc788\\uc9c0\\ub294 \\uc54a\\uc740 \\ub458 \\uc774\\uc0c1\\n\\uc2e4\\uccb4\\ub4e4\\ub85c \\uad6c\\uc131\\ub41c\\ub2e4\\uba74 \\uadf8 \\ubcf4\\uace0\\uae30\\uc5c5\\uc758 \\uc7ac\\ubb34\\uc81c\\ud45c\\ub97c \\u2018\\ube44\\uc5f0\\uacb0\\uc7ac\\ubb34\\uc81c\\ud45c\\u2019\\n\\ub77c\\uace0 \\ubd80\\ub978\\ub2e4.\\n2. \\uc77c\\ubc18\\ubaa9\\uc801\\uc7ac\\ubb34\\ubcf4\\uace0\\uc11c\\uc758 \\ub300\\uc0c1\\uc774 \\ub418\\ub294 \\uc8fc\\uc694\\uc774\\uc6a9\\uc790\\ub294 \\ud544\\uc694\\ud55c \\uc7ac\\ubb34\\n\\uc815\\ubcf4\\uc758 \\ub9ce\\uc740 \\ubd80\\ubd84\\uc744 \\uc77c\\ubc18\\ubaa9\\uc801\\uc7ac\\ubb34\\uc81c\\ud45c\\uc5d0 \\uc758\\uc874\\ud574\\uc57c \\ud558\\ub294 \\ud604\\uc7ac\\n\\ubc0f \\uc7a0\\uc7ac\\uc801 \\ud22c\\uc790\\uc790, \\ub300\\uc5ec\\uc790\\uc640 \\uadf8 \\ubc16\\uc758 \\ucc44\\uad8c\\uc790\\ub97c \\ub9d0\\ud55c\\ub2e4.\\n3. \\ub9cc\\uc77c \\uc5b4\\ub5a4 \\ub450 \\uac00\\uc9c0 \\ubc29\\ubc95\\uc774 \\ubaa8\\ub450 \\ud604\\uc0c1\\uc5d0 \\ub300\\ud558\\uc5ec \\ub3d9\\uc77c\\ud558\\uac8c \\ubaa9\\uc801\\n\\uc801\\ud569\\ud55c \\uc815\\ubcf4\\uc774\\uace0 \\ub3d9\\uc77c\\ud558\\uac8c \\ucda9\\uc2e4\\ud55c \\ud45c\\ud604\\uc744 \\uc81c\\uacf5\\ud558\\ub294 \\uac83\\uc774\\ub77c\\uba74,\\n\\ubcf4\\uac15\\uc801 \\uc9c8\\uc801\\ud2b9\\uc131\\uc740 \\uc774 \\ub450 \\uac00\\uc9c0 \\ubc29\\ubc95 \\uac00\\uc6b4\\ub370 \\uc5b4\\ub290 \\ubc29\\ubc95\\uc744 \\uadf8 \\ud604\\uc0c1\\uc758\\n\\uc11c\\uc220\\uc5d0 \\uc0ac\\uc6a9\\ud574\\uc57c \\ud560\\uc9c0\\ub97c \\uacb0\\uc815\\ud558\\ub294 \\ub370 \\ub3c4\\uc6c0\\uc744 \\uc904 \\uc218 \\uc788\\ub2e4.\\n4. \\uc77c\\ubc18\\uc801\\uc73c\\ub85c \\uc7ac\\ubb34\\uc81c\\ud45c\\ub294 \\uacc4\\uc18d\\uae30\\uc5c5\\uac00\\uc815 \\ud558\\uc5d0 \\uc791\\uc131\\ub418\\ub098, \\uae30\\uc5c5\\uc774\\n\\uccad\\uc0b0\\uc744 \\ud558\\uac70\\ub098 \\uac70\\ub798\\ub97c \\uc911\\ub2e8\\ud558\\ub824\\ub294 \\uc758\\ub3c4\\uac00 \\uc788\\ub2e4\\uba74 \\uacc4\\uc18d\\uae30\\uc5c5\\uacfc\\ub294\\n\\ub2e4\\ub978 \\uae30\\uc900\\uc5d0 \\ub530\\ub77c \\uc791\\uc131\\ub418\\uc5b4\\uc57c \\ud558\\uace0 \\uc0ac\\uc6a9\\ud55c \\uae30\\uc900\\uc744 \\uc7ac\\ubb34\\uc81c\\ud45c\\uc5d0\\n\\uae30\\uc220\\ud55c\\ub2e4\\n5. \\uc77c\\ubc18\\ubaa9\\uc801\\uc7ac\\ubb34\\ubcf4\\uace0\\uc758 \\ubaa9\\uc801\\uc744 \\ub2ec\\uc131\\ud558\\uae30 \\uc704\\ud574 \\ud68c\\uacc4\\uae30\\uc900\\uc704\\uc6d0\\ud68c\\ub294\\n\\u2018\\uac1c\\ub150\\uccb4\\uacc4\\u2019\\uc758 \\uad00\\uc810\\uc5d0\\uc11c \\ubc97\\uc5b4\\ub09c \\uc694\\uad6c\\uc0ac\\ud56d\\uc744 \\uc815\\ud558\\ub294 \\uacbd\\uc6b0\\uac00 \\uc788\\uc744\\n\\uc218 \\uc788\\ub2e4.\\n\\nResponse format:\\n{\\n  \\"selected_answer\\": \\"1\\",\\n  \\"reasoning\\": [\\n    \\"1. ...\\",\\n    \\"2. ...\\",\\n    \\"3. ...\\",\\n    \\"4. ...\\",\\n    \\"5. ...\\"\\n  ]\\n}"}], "temperature": 0.2, "max_tokens": 500}' message='Post details'
2025-01-03 20:23:19,798 - urllib3.util.retry - DEBUG - Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2025-01-03 20:23:19,804 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.openai.com:443
2025-01-03 20:23:27,677 - urllib3.connectionpool - DEBUG - https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2025-01-03 20:23:27,682 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=7178 request_id=req_03f1718e9549cdd506dd87d5d6d48ba4 response_code=200
2025-01-03 20:23:27,684 - src.openai_client - INFO - OpenAI API call successful
2025-01-03 20:23:27,685 - src.openai_client - DEBUG - Raw GPT response:
```json
{
  "selected_answer": "1",
  "reasoning": [
    "1. 이 설명은 옳지 않습니다. 비연결재무제표는 보고기업이 지배-종속관계로 연결된 실체들로 구성되지 않은 경우가 아니라, 연결된 실체들로 구성되지만 연결재무제표를 작성하지 않는 경우를 의미합니다. 따라서 이 설명은 잘못된 정의를 제공합니다.",
    "2. 이 설명은 옳습니다. 일반목적재무보고서의 주요 이용자는 현재 및 잠재적 투자자, 대여자와 그 밖의 채권자들로, 이들은 재무정보의 많은 부분을 일반목적재무제표에 의존합니다.",
    "3. 이 설명은 옳습니다. 두 가지 방법이 동일하게 목적 적합한 정보와 충실한 표현을 제공할 경우, 보강적 질적특성이 어떤 방법을 선택해야 하는지를 결정하는 데 도움을 줄 수 있습니다.",
    "4. 이 설명은 옳습니다. 일반적으로 재무제표는 계속기업 가정 하에 작성되지만, 기업이 청산하거나 거래를 중단할 경우에는 다른 기준에 따라 작성되어야 하며, 그 기준을 재무제표에 기술해야 합니다.",
    "5. 이 설명은 옳습니다. 회계기준위원회는 일반목적재무보고의 목적을 달성하기 위해 개념체계의 관점에서 벗어난 요구사항을 정할 수 있습니다."
  ]
}
```
2025-01-03 20:23:27,685 - src.openai_client - DEBUG - Parsed GPT response:
{'selected_answer': '1', 'reasoning': ['1. 이 설명은 옳지 않습니다. 비연결재무제표는 보고기업이 지배-종속관계로 연결된 실체들로 구성되지 않은 경우가 아니라, 연결된 실체들로 구성되지만 연결재무제표를 작성하지 않는 경우를 의미합니다. 따라서 이 설명은 잘못된 정의를 제공합니다.', '2. 이 설명은 옳습니다. 일반목적재무보고서의 주요 이용자는 현재 및 잠재적 투자자, 대여자와 그 밖의 채권자들로, 이들은 재무정보의 많은 부분을 일반목적재무제표에 의존합니다.', '3. 이 설명은 옳습니다. 두 가지 방법이 동일하게 목적 적합한 정보와 충실한 표현을 제공할 경우, 보강적 질적특성이 어떤 방법을 선택해야 하는지를 결정하는 데 도움을 줄 수 있습니다.', '4. 이 설명은 옳습니다. 일반적으로 재무제표는 계속기업 가정 하에 작성되지만, 기업이 청산하거나 거래를 중단할 경우에는 다른 기준에 따라 작성되어야 하며, 그 기준을 재무제표에 기술해야 합니다.', '5. 이 설명은 옳습니다. 회계기준위원회는 일반목적재무보고의 목적을 달성하기 위해 개념체계의 관점에서 벗어난 요구사항을 정할 수 있습니다.']}
2025-01-03 20:23:27,685 - src.openai_client - INFO - GPT response successfully parsed
2025-01-03 20:23:27,685 - src.processor - INFO - Question 'Q1' processed: Correct=True
2025-01-03 20:23:27,687 - src.processor - INFO - Debug information saved to output/debug/test_exam_debug.json
2025-01-03 20:23:27,687 - src.processor - INFO - Completed processing of exam 'test_exam' with 1 results
2025-01-03 20:23:27,687 - __main__ - INFO - Completed processing of exam 'test_exam'
2025-01-03 20:23:27,687 - src.visualizer - INFO - Generating score distribution visualization for exam 'test_exam'
2025-01-03 20:23:27,700 - matplotlib.pyplot - DEBUG - Loaded backend macosx version unknown.
2025-01-03 20:23:27,805 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e9a9a2d18358033875835a6228cb70ce84b7e47c.asset/AssetData/YuMincho.ttc', name='YuMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/a3f9a9e35bdf3babe03b2fd162051306fad439d6.asset/AssetData/Osaka.ttf', name='Osaka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-03 20:23:27,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/eb257c12d1a51c8c661b89f30eec56cacf9b8987.asset/AssetData/STHEITI.ttf', name='STHeiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/54ef167d6c8e99a69a0d41ce252cc5995ba47580.asset/AssetData/YuGothic-Medium.otf', name='YuGothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9fdda46cbe802833590494a09b2787378340c597.asset/AssetData/Hanzipen.ttc', name='HanziPen SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/18189590ed3a5f46cef20ed4d1cec2611dca13ff.asset/AssetData/WawaSC-Regular.otf', name='Wawati SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/6f4c91728bb824d6960725ec479c355eab7eeba8.asset/AssetData/NanumScript.ttc', name='Nanum Brush Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/8739f5cf483d3b2f04cbb451d310b68f0cf880d0.asset/AssetData/ToppanBunkyuMinchoPr6N-Regular.otf', name='Toppan Bunkyu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f879347736afb6e4e0880bcede9df92492c0f040.asset/AssetData/Gungseouche.ttf', name='GungSeo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/de97612eef4e3cf8ee8e5c0ebd6fd879bbecd23a.asset/AssetData/AppleLiGothic-Medium.ttf', name='Apple LiGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/c2cf5e684236b5395fd48d6ccf0e3b3191ce83a0.asset/AssetData/PCmyoungjo.ttf', name='PCMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/8dc7805506cc9f233dcc19aabf593196842a47ae.asset/AssetData/Hannotate.ttc', name='Hannotate SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5f2614e7b55639e709d8578e16b324b3eb6eb065.asset/AssetData/BMHannaPro-Regular.otf', name='BM Hanna Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/d7d512f49387f96799ae9271c7fa8f8e9fef05d1.asset/AssetData/BIZ_UDGothic.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e28431125242b9a298de3296370abdab4a7e8666.asset/AssetData/YuppyTC-Regular.otf', name='Yuppy TC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/7278ac2566252649b05c5a2b07c7d45be59f47c5.asset/AssetData/Libian.ttc', name='Libian SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/42062e40d643fdb5bb3fba917212352fb0690de0.asset/AssetData/YuGothic-Bold.otf', name='YuGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/aa99d0b2bad7f797f38b49d46cde28fd4b58876e.asset/AssetData/Xingkai.ttc', name='Xingkai SC', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/3d7c99b85a518ffb479044c11185e47744b6448d.asset/AssetData/WawaTC-Regular.otf', name='Wawati TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/32d11e548996658757774d88f9220993653017ea.asset/AssetData/Hiragino_Sans_CNS.ttc', name='Hiragino Sans CNS', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/62032b9b64a0e3a9121c50aeb2ed794e3e2c201f.asset/AssetData/Hei.ttf', name='Hei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/96af7ec9e88d5dae450d3162213f92a7b1129430.asset/AssetData/YuppySC-Regular.otf', name='Yuppy SC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f7f6b250e97c182e68ac53a2b359ec44548878b9.asset/AssetData/Lantinghei.ttc', name='Lantinghei SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/857d6c90171c328a4892c1492291d34e401d7f25.asset/AssetData/SimSong.ttc', name='SimSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/cd59971ded42add9070aa2172265ba7fcf8d9327.asset/AssetData/BMKirangHaerang-Regular.otf', name='BM Kirang Haerang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/a8805b853edf89283dec908153a0015bdd1d00f8.asset/AssetData/WeibeiSC-Bold.otf', name='Weibei SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5a3fc034b64879656271c040cab38b65d4ea6548.asset/AssetData/LiSongPro.ttf', name='LiSong Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/938fc4f0524ec9f143f1b39a4e63ff9585298376.asset/AssetData/ToppanBunkyuMidashiGothicStdN-ExtraBold.otf', name='Toppan Bunkyu Midashi Gothic', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/12cc699be28fb04f3e3c4969a0378a87b920b174.asset/AssetData/BMHannaAir-Regular.otf', name='BM Hanna Air', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e71ea5469e5f2039223f22203ee8b9186524afd3.asset/AssetData/BMDoHyeon-Regular.otf', name='BM Dohyeon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/bad9b4bf17cf1669dde54184ba4431c22dcad27b.asset/AssetData/NanumGothic.ttc', name='Nanum Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/10b097deccb3c6126d986e24b1980031ff7399da.asset/AssetData/TsukushiBMaruGothic.ttc', name='Tsukushi B Round Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/7ca27bc02dd7660f9dacd69df96d24639b96e080.asset/AssetData/Pilgiche.ttf', name='PilGi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f0706a236683628e16427c6569e441423faaaa93.asset/AssetData/STXIHEI.ttf', name='STHeiti', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5b843781be7f58151ada774942a0eaa9ec79bd57.asset/AssetData/Kyokasho.ttc', name='YuKyokasho Yoko', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/40e56e4eafd8b4db78ffe316f64ac4bedba37b53.asset/AssetData/ToppanBunkyuMidashiMinchoStdN-ExtraBold.otf', name='Toppan Bunkyu Midashi Mincho', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5b2f5f0b003344b2c67ce463e76d2485bb43d054.asset/AssetData/BMJua-Regular.otf', name='BM Jua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/28f00a24ba19995bab7249993e6e35d11011074a.asset/AssetData/Kai.ttf', name='Kai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/0818d874bf1d0e24a1fe62e79f407717792c5ee1.asset/AssetData/OsakaMono.ttf', name='Osaka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/54a2ad3dac6cac875ad675d7d273dc425010a877.asset/AssetData/Kaiti.ttc', name='Kaiti SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/1821952872c81043711aab6910052b65da8edf2c.asset/AssetData/STFANGSO.ttf', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/157acc4d862730d6d5beaa943546f80a71948c7b.asset/AssetData/BMHanna11yrs-Regular.otf', name='BM Hanna 11yrs Old', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9d5450ee93f17da1eacfa01b5e7b598f9e2dda2b.asset/AssetData/Baoli.ttc', name='Baoli SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/b86e58f38fd21e9782e70a104676f1655e72ebab.asset/AssetData/Yuanti.ttc', name='Yuanti SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/b8cf53b3591d6062cd536ba5129454cba899a078.asset/AssetData/LingWaiTC-Medium.otf', name='LingWai TC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/de4b2bad515a67ab2d11e39fd896b1e189252a43.asset/AssetData/HeadlineA.ttf', name='HeadLineA', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-01-03 20:23:27,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/584ea2a48d14147049c2f9eaee147fe5a1f279ac.asset/AssetData/BiauKai.ttc', name='BiauKaiHK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9bcdfd464af84ab30592d781f4a82f44f548239c.asset/AssetData/BMYeongSung-Regular.otf', name='BM Yeonsung', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/0ab217c39c45c7c6acaddfa199fd32c55a7b4a19.asset/AssetData/ToppanBunkyuGothicPr6N.ttc', name='Toppan Bunkyu Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/3a9dbc8ddc8b85f43055a28fb5d551e905d43de2.asset/AssetData/LiHeiPro.ttf', name='LiHei Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/70816a43827731d40efe234b94feba96db91024f.asset/AssetData/NanumMyeongjo.ttc', name='Nanum Myeongjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f110a45f1759f86c645cfd2f47baba57aa50056e.asset/AssetData/Klee.ttc', name='Klee', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/2ae839cbaa0ff60fe6a1d8921a77c81adcec0646.asset/AssetData/AppleLiSung-Light.ttf', name='Apple LiSung', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/d9a8a6ae726910080d90232eaf0edb06da712758.asset/AssetData/TsukushiAMaruGothic.ttc', name='Tsukushi A Round Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/ad8c3bb76851adc11dc4772c1a7a00caf83e3037.asset/AssetData/Ornanong.ttc', name='PSL Ornanong Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e617c1b15920c6ee2d047ed8724de08521ce5c9a.asset/AssetData/BIZ_UDMincho-regular.ttf', name='BIZ UDMincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e2c331b942cb338404a160a97a7cd6e8a31428e8.asset/AssetData/LingWaiSC-Medium.otf', name='LingWai SC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,817 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e9a9a2d18358033875835a6228cb70ce84b7e47c.asset/AssetData/YuMincho.ttc', name='YuMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/a3f9a9e35bdf3babe03b2fd162051306fad439d6.asset/AssetData/Osaka.ttf', name='Osaka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/eb257c12d1a51c8c661b89f30eec56cacf9b8987.asset/AssetData/STHEITI.ttf', name='STHeiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/54ef167d6c8e99a69a0d41ce252cc5995ba47580.asset/AssetData/YuGothic-Medium.otf', name='YuGothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9fdda46cbe802833590494a09b2787378340c597.asset/AssetData/Hanzipen.ttc', name='HanziPen SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/18189590ed3a5f46cef20ed4d1cec2611dca13ff.asset/AssetData/WawaSC-Regular.otf', name='Wawati SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/6f4c91728bb824d6960725ec479c355eab7eeba8.asset/AssetData/NanumScript.ttc', name='Nanum Brush Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/8739f5cf483d3b2f04cbb451d310b68f0cf880d0.asset/AssetData/ToppanBunkyuMinchoPr6N-Regular.otf', name='Toppan Bunkyu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f879347736afb6e4e0880bcede9df92492c0f040.asset/AssetData/Gungseouche.ttf', name='GungSeo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/de97612eef4e3cf8ee8e5c0ebd6fd879bbecd23a.asset/AssetData/AppleLiGothic-Medium.ttf', name='Apple LiGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/c2cf5e684236b5395fd48d6ccf0e3b3191ce83a0.asset/AssetData/PCmyoungjo.ttf', name='PCMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/8dc7805506cc9f233dcc19aabf593196842a47ae.asset/AssetData/Hannotate.ttc', name='Hannotate SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5f2614e7b55639e709d8578e16b324b3eb6eb065.asset/AssetData/BMHannaPro-Regular.otf', name='BM Hanna Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/d7d512f49387f96799ae9271c7fa8f8e9fef05d1.asset/AssetData/BIZ_UDGothic.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e28431125242b9a298de3296370abdab4a7e8666.asset/AssetData/YuppyTC-Regular.otf', name='Yuppy TC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/7278ac2566252649b05c5a2b07c7d45be59f47c5.asset/AssetData/Libian.ttc', name='Libian SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/42062e40d643fdb5bb3fba917212352fb0690de0.asset/AssetData/YuGothic-Bold.otf', name='YuGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/aa99d0b2bad7f797f38b49d46cde28fd4b58876e.asset/AssetData/Xingkai.ttc', name='Xingkai SC', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/3d7c99b85a518ffb479044c11185e47744b6448d.asset/AssetData/WawaTC-Regular.otf', name='Wawati TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/32d11e548996658757774d88f9220993653017ea.asset/AssetData/Hiragino_Sans_CNS.ttc', name='Hiragino Sans CNS', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/62032b9b64a0e3a9121c50aeb2ed794e3e2c201f.asset/AssetData/Hei.ttf', name='Hei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/96af7ec9e88d5dae450d3162213f92a7b1129430.asset/AssetData/YuppySC-Regular.otf', name='Yuppy SC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f7f6b250e97c182e68ac53a2b359ec44548878b9.asset/AssetData/Lantinghei.ttc', name='Lantinghei SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/857d6c90171c328a4892c1492291d34e401d7f25.asset/AssetData/SimSong.ttc', name='SimSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/cd59971ded42add9070aa2172265ba7fcf8d9327.asset/AssetData/BMKirangHaerang-Regular.otf', name='BM Kirang Haerang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/a8805b853edf89283dec908153a0015bdd1d00f8.asset/AssetData/WeibeiSC-Bold.otf', name='Weibei SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5a3fc034b64879656271c040cab38b65d4ea6548.asset/AssetData/LiSongPro.ttf', name='LiSong Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/938fc4f0524ec9f143f1b39a4e63ff9585298376.asset/AssetData/ToppanBunkyuMidashiGothicStdN-ExtraBold.otf', name='Toppan Bunkyu Midashi Gothic', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/12cc699be28fb04f3e3c4969a0378a87b920b174.asset/AssetData/BMHannaAir-Regular.otf', name='BM Hanna Air', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e71ea5469e5f2039223f22203ee8b9186524afd3.asset/AssetData/BMDoHyeon-Regular.otf', name='BM Dohyeon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/bad9b4bf17cf1669dde54184ba4431c22dcad27b.asset/AssetData/NanumGothic.ttc', name='Nanum Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/10b097deccb3c6126d986e24b1980031ff7399da.asset/AssetData/TsukushiBMaruGothic.ttc', name='Tsukushi B Round Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/7ca27bc02dd7660f9dacd69df96d24639b96e080.asset/AssetData/Pilgiche.ttf', name='PilGi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f0706a236683628e16427c6569e441423faaaa93.asset/AssetData/STXIHEI.ttf', name='STHeiti', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5b843781be7f58151ada774942a0eaa9ec79bd57.asset/AssetData/Kyokasho.ttc', name='YuKyokasho Yoko', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/40e56e4eafd8b4db78ffe316f64ac4bedba37b53.asset/AssetData/ToppanBunkyuMidashiMinchoStdN-ExtraBold.otf', name='Toppan Bunkyu Midashi Mincho', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/5b2f5f0b003344b2c67ce463e76d2485bb43d054.asset/AssetData/BMJua-Regular.otf', name='BM Jua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/28f00a24ba19995bab7249993e6e35d11011074a.asset/AssetData/Kai.ttf', name='Kai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/0818d874bf1d0e24a1fe62e79f407717792c5ee1.asset/AssetData/OsakaMono.ttf', name='Osaka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/54a2ad3dac6cac875ad675d7d273dc425010a877.asset/AssetData/Kaiti.ttc', name='Kaiti SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/1821952872c81043711aab6910052b65da8edf2c.asset/AssetData/STFANGSO.ttf', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/157acc4d862730d6d5beaa943546f80a71948c7b.asset/AssetData/BMHanna11yrs-Regular.otf', name='BM Hanna 11yrs Old', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9d5450ee93f17da1eacfa01b5e7b598f9e2dda2b.asset/AssetData/Baoli.ttc', name='Baoli SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/b86e58f38fd21e9782e70a104676f1655e72ebab.asset/AssetData/Yuanti.ttc', name='Yuanti SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/b8cf53b3591d6062cd536ba5129454cba899a078.asset/AssetData/LingWaiTC-Medium.otf', name='LingWai TC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/de4b2bad515a67ab2d11e39fd896b1e189252a43.asset/AssetData/HeadlineA.ttf', name='HeadLineA', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/584ea2a48d14147049c2f9eaee147fe5a1f279ac.asset/AssetData/BiauKai.ttc', name='BiauKaiHK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-01-03 20:23:27,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/9bcdfd464af84ab30592d781f4a82f44f548239c.asset/AssetData/BMYeongSung-Regular.otf', name='BM Yeonsung', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/0ab217c39c45c7c6acaddfa199fd32c55a7b4a19.asset/AssetData/ToppanBunkyuGothicPr6N.ttc', name='Toppan Bunkyu Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/3a9dbc8ddc8b85f43055a28fb5d551e905d43de2.asset/AssetData/LiHeiPro.ttf', name='LiHei Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/70816a43827731d40efe234b94feba96db91024f.asset/AssetData/NanumMyeongjo.ttc', name='Nanum Myeongjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/f110a45f1759f86c645cfd2f47baba57aa50056e.asset/AssetData/Klee.ttc', name='Klee', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/2ae839cbaa0ff60fe6a1d8921a77c81adcec0646.asset/AssetData/AppleLiSung-Light.ttf', name='Apple LiSung', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/d9a8a6ae726910080d90232eaf0edb06da712758.asset/AssetData/TsukushiAMaruGothic.ttc', name='Tsukushi A Round Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/ad8c3bb76851adc11dc4772c1a7a00caf83e3037.asset/AssetData/Ornanong.ttc', name='PSL Ornanong Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e617c1b15920c6ee2d047ed8724de08521ce5c9a.asset/AssetData/BIZ_UDMincho-regular.ttf', name='BIZ UDMincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/AssetsV2/com_apple_MobileAsset_Font7/e2c331b942cb338404a160a97a7cd6e8a31428e8.asset/AssetData/LingWaiSC-Medium.otf', name='LingWai SC', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-03 20:23:27,836 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/junghyeon/PycharmProjects/FINOVA_AGENT/.venv/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-01-03 20:23:27,853 - src.visualizer - INFO - Score distribution pie chart saved at: output/test_exam_score_pie_chart.png
2025-01-03 20:23:27,853 - src.visualizer - INFO - Generating corrections table for exam 'test_exam'
2025-01-03 20:23:27,853 - src.visualizer - INFO - All answers are correct. No corrections to save.
2025-01-03 20:23:27,853 - __main__ - INFO - Visualization complete. Output directory: 'output'
